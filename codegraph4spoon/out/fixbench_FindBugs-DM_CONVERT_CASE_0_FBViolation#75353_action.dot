digraph "_makeDOI#?,String" {
0 [label="212:CtTypeReferenceImpl@String" shape=ellipse]
1 [label="212:CtPackageReferenceImpl@java.lang" shape=ellipse]
2 [label="212:CtVirtualElement@_makeDOI" shape=ellipse]
3 [label="212:CtParameterImpl@final String doi" shape=ellipse]
4 [label="212:CtTypeReferenceImpl@String" shape=ellipse]
5 [label="213:CtTypeReferenceImpl@String" shape=ellipse]
6 [label="213:CtPackageReferenceImpl@java.lang" shape=ellipse]
7 [label="213:CtVirtualElement@d" shape=ellipse]
8 [label="213:CtLocalVariableImpl@final String d" shape=ellipse]
9 [label="213:CtVirtualElement@d2" shape=ellipse]
10 [label="213:CtLocalVariableImpl@final String d2" shape=ellipse]
11 [label="213:CtTypeReferenceImpl@String" shape=ellipse]
12 [label="215:CtVariableWriteImpl@d" shape=ellipse]
13 [label="215:CtLocalVariableReferenceImpl@d" shape=ellipse]
14 [label="215:CtExecutableReferenceImpl@normalize(java.lang.String)" shape=ellipse]
15 [label="215:CtTypeReferenceImpl@TextUtils" shape=ellipse]
16 [label="215:CtTypeReferenceImpl@String" shape=ellipse]
17 [label="215:CtTypeReferenceImpl@String" shape=ellipse]
18 [label="215:CtVirtualElement@normalize" shape=ellipse]
19 [label="215:CtTypeAccessImpl@TextUtils" shape=ellipse]
20 [label="215:CtTypeReferenceImpl@TextUtils" shape=ellipse]
21 [label="215:CtVariableReadImpl@doi" shape=ellipse]
22 [label="215:CtParameterReferenceImpl@doi" shape=ellipse]
23 [label="215:CtInvocationImpl@TextUtils.normalize(doi)" shape=ellipse]
24 [label="215:CtTypeReferenceImpl@String" shape=ellipse]
25 [label="215:CtPackageReferenceImpl@java.lang" shape=ellipse]
26 [label="215:CtAssignmentImpl@d = TextUtils.normalize(doi)" shape=ellipse]
27 [label="216:CtVariableReadImpl@d" shape=ellipse]
28 [label="216:CtLocalVariableReferenceImpl@d" shape=ellipse]
29 [label="216:CtLiteralImpl@null" shape=ellipse]
30 [label="216:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
31 [label="216:CtBinaryOperatorImpl@d == null" shape=ellipse]
32 [label="216:CtTypeReferenceImpl@boolean" shape=ellipse]
33 [label="217:CtLiteralImpl@null" shape=ellipse]
34 [label="217:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
35 [label="217:CtReturnImpl@return null" shape=ellipse]
36 [label="216:CtBlockImpl@\{
    return null;
\}" shape=ellipse]
37 [label="216:CtIfImpl@if (d == null) \{
    return null;
\}" shape=ellipse]
38 [label="219:CtVariableWriteImpl@d2" shape=ellipse]
39 [label="219:CtLocalVariableReferenceImpl@d2" shape=ellipse]
40 [label="219:CtExecutableReferenceImpl@toLowerCase()" shape=ellipse]
41 [label="219:CtTypeReferenceImpl@String" shape=ellipse]
42 [label="219:CtTypeReferenceImpl@String" shape=ellipse]
43 [label="219:CtVirtualElement@toLowerCase" shape=ellipse]
44 [label="219:CtExecutableReferenceImpl@substring(int,int)" shape=ellipse]
45 [label="219:CtTypeReferenceImpl@String" shape=ellipse]
46 [label="219:CtTypeReferenceImpl@String" shape=ellipse]
47 [label="219:CtTypeReferenceImpl@int" shape=ellipse]
48 [label="219:CtTypeReferenceImpl@int" shape=ellipse]
49 [label="219:CtVirtualElement@substring" shape=ellipse]
50 [label="219:CtVariableReadImpl@d" shape=ellipse]
51 [label="219:CtLocalVariableReferenceImpl@d" shape=ellipse]
52 [label="219:CtLiteralImpl@0" shape=ellipse]
53 [label="219:CtTypeReferenceImpl@int" shape=ellipse]
54 [label="219:CtExecutableReferenceImpl@min(int,int)" shape=ellipse]
55 [label="219:CtTypeReferenceImpl@Math" shape=ellipse]
56 [label="219:CtTypeReferenceImpl@int" shape=ellipse]
57 [label="219:CtTypeReferenceImpl@int" shape=ellipse]
58 [label="219:CtTypeReferenceImpl@int" shape=ellipse]
59 [label="219:CtVirtualElement@min" shape=ellipse]
60 [label="219:CtTypeAccessImpl@Math" shape=ellipse]
61 [label="219:CtTypeReferenceImpl@Math" shape=ellipse]
62 [label="219:CtExecutableReferenceImpl@length()" shape=ellipse]
63 [label="219:CtTypeReferenceImpl@String" shape=ellipse]
64 [label="219:CtTypeReferenceImpl@int" shape=ellipse]
65 [label="219:CtVirtualElement@length" shape=ellipse]
66 [label="219:CtVariableReadImpl@d" shape=ellipse]
67 [label="219:CtLocalVariableReferenceImpl@d" shape=ellipse]
68 [label="219:CtInvocationImpl@d.length()" shape=ellipse]
69 [label="219:CtLiteralImpl@18" shape=ellipse]
70 [label="219:CtTypeReferenceImpl@int" shape=ellipse]
71 [label="219:CtInvocationImpl@Math.min(d.length(), 18)" shape=ellipse]
72 [label="219:CtInvocationImpl@d.substring(0, Math.min(d.length(), 18))" shape=ellipse]
73 [label="219:CtInvocationImpl@d.substring(0, Math.min(d.length(), 18)).toLowerCase()" shape=ellipse]
74 [label="219:CtTypeReferenceImpl@String" shape=ellipse]
75 [label="219:CtPackageReferenceImpl@java.lang" shape=ellipse]
76 [label="219:CtAssignmentImpl@d2 = d.substring(0, Math.min(d.length(), 18)).toLowerCase()" shape=ellipse]
77 [label="220:CtExecutableReferenceImpl@startsWith(java.lang.String)" shape=ellipse]
78 [label="220:CtTypeReferenceImpl@String" shape=ellipse]
79 [label="220:CtTypeReferenceImpl@boolean" shape=ellipse]
80 [label="220:CtTypeReferenceImpl@String" shape=ellipse]
81 [label="220:CtVirtualElement@startsWith" shape=ellipse]
82 [label="220:CtVariableReadImpl@d2" shape=ellipse]
83 [label="220:CtLocalVariableReferenceImpl@d2" shape=ellipse]
84 [label="220:CtLiteralImpl@\"http://dx.doi.org/\"" shape=ellipse]
85 [label="220:CtTypeReferenceImpl@String" shape=ellipse]
86 [label="220:CtInvocationImpl@d2.startsWith(\"http://dx.doi.org/\")" shape=ellipse]
87 [label="221:CtExecutableReferenceImpl@prepare(java.lang.String)" shape=ellipse]
88 [label="221:CtTypeReferenceImpl@TextUtils" shape=ellipse]
89 [label="221:CtTypeReferenceImpl@String" shape=ellipse]
90 [label="221:CtTypeReferenceImpl@String" shape=ellipse]
91 [label="221:CtVirtualElement@prepare" shape=ellipse]
92 [label="221:CtTypeAccessImpl@TextUtils" shape=ellipse]
93 [label="221:CtTypeReferenceImpl@TextUtils" shape=ellipse]
94 [label="221:CtExecutableReferenceImpl@substring(int)" shape=ellipse]
95 [label="221:CtTypeReferenceImpl@String" shape=ellipse]
96 [label="221:CtTypeReferenceImpl@String" shape=ellipse]
97 [label="221:CtTypeReferenceImpl@int" shape=ellipse]
98 [label="221:CtVirtualElement@substring" shape=ellipse]
99 [label="221:CtVariableReadImpl@d" shape=ellipse]
100 [label="221:CtLocalVariableReferenceImpl@d" shape=ellipse]
101 [label="221:CtLiteralImpl@18" shape=ellipse]
102 [label="221:CtTypeReferenceImpl@int" shape=ellipse]
103 [label="221:CtInvocationImpl@d.substring(18)" shape=ellipse]
104 [label="221:CtInvocationImpl@TextUtils.prepare(d.substring(18))" shape=ellipse]
105 [label="221:CtReturnImpl@// $NON-NLS-1$
return TextUtils.prepare(d.substring(18))" shape=ellipse]
106 [label="220:CtCommentImpl@// $NON-NLS-1$" shape=ellipse]
107 [label="220:CtBlockImpl@\{
    // $NON-NLS-1$
    return TextUtils.prepare(d.substring(18));
\}" shape=ellipse]
108 [label="220:CtIfImpl@if (d2.startsWith(\"http://dx.doi.org/\")) \{
    // $NON-NLS-1$
    return TextUtils.prepare(d.substring(18));
\}" shape=ellipse]
109 [label="223:CtExecutableReferenceImpl@startsWith(java.lang.String)" shape=ellipse]
110 [label="223:CtTypeReferenceImpl@String" shape=ellipse]
111 [label="223:CtTypeReferenceImpl@boolean" shape=ellipse]
112 [label="223:CtTypeReferenceImpl@String" shape=ellipse]
113 [label="223:CtVirtualElement@startsWith" shape=ellipse]
114 [label="223:CtVariableReadImpl@d2" shape=ellipse]
115 [label="223:CtLocalVariableReferenceImpl@d2" shape=ellipse]
116 [label="223:CtLiteralImpl@\"doi:\"" shape=ellipse]
117 [label="223:CtTypeReferenceImpl@String" shape=ellipse]
118 [label="223:CtInvocationImpl@d2.startsWith(\"doi:\")" shape=ellipse]
119 [label="224:CtExecutableReferenceImpl@prepare(java.lang.String)" shape=ellipse]
120 [label="224:CtTypeReferenceImpl@TextUtils" shape=ellipse]
121 [label="224:CtTypeReferenceImpl@String" shape=ellipse]
122 [label="224:CtTypeReferenceImpl@String" shape=ellipse]
123 [label="224:CtVirtualElement@prepare" shape=ellipse]
124 [label="224:CtTypeAccessImpl@TextUtils" shape=ellipse]
125 [label="224:CtTypeReferenceImpl@TextUtils" shape=ellipse]
126 [label="224:CtExecutableReferenceImpl@substring(int)" shape=ellipse]
127 [label="224:CtTypeReferenceImpl@String" shape=ellipse]
128 [label="224:CtTypeReferenceImpl@String" shape=ellipse]
129 [label="224:CtTypeReferenceImpl@int" shape=ellipse]
130 [label="224:CtVirtualElement@substring" shape=ellipse]
131 [label="224:CtVariableReadImpl@d" shape=ellipse]
132 [label="224:CtLocalVariableReferenceImpl@d" shape=ellipse]
133 [label="224:CtLiteralImpl@4" shape=ellipse]
134 [label="224:CtTypeReferenceImpl@int" shape=ellipse]
135 [label="224:CtInvocationImpl@d.substring(4)" shape=ellipse]
136 [label="224:CtInvocationImpl@TextUtils.prepare(d.substring(4))" shape=ellipse]
137 [label="224:CtReturnImpl@// $NON-NLS-1$
return TextUtils.prepare(d.substring(4))" shape=ellipse]
138 [label="223:CtCommentImpl@// $NON-NLS-1$" shape=ellipse]
139 [label="223:CtBlockImpl@\{
    // $NON-NLS-1$
    return TextUtils.prepare(d.substring(4));
\}" shape=ellipse]
140 [label="223:CtIfImpl@if (d2.startsWith(\"doi:\")) \{
    // $NON-NLS-1$
    return TextUtils.prepare(d.substring(4));
\}" shape=ellipse]
141 [label="226:CtVariableReadImpl@d" shape=ellipse]
142 [label="226:CtLocalVariableReferenceImpl@d" shape=ellipse]
143 [label="226:CtReturnImpl@return d" shape=ellipse]
144 [label="212:CtBlockImpl@\{
    final String d;
    final String d2;
    d = TextUtils.normalize(doi);
    if (d == null) \{
        return null;
    \}
    d2 = d.substring(0, Math.min(d.length(), 18)).toLowerCase();
    if (d2.startsWith(\"http://dx.doi.org/\")) \{
        // $NON-NLS-1$
        return TextUtils.prepare(d.substring(18));
    \}
    if (d2.startsWith(\"doi:\")) \{
        // $NON-NLS-1$
        return TextUtils.prepare(d.substring(4));
    \}
    return d;
\}" shape=ellipse]
145 [label="212:CtMethodImpl@/**
 * make a doi
 *
 * @param doi
 * \	\	the doi
 * @return the doi string
 */
static final String _makeDOI(final String doi) \{
    final String d;
    final String d2;
    d = TextUtils.normalize(doi);
    if (d == null) \{
        return null;
    \}
    d2 = d.substring(0, Math.min(d.length(), 18)).toLowerCase();
    if (d2.startsWith(\"http://dx.doi.org/\")) \{
        // $NON-NLS-1$
        return TextUtils.prepare(d.substring(18));
    \}
    if (d2.startsWith(\"doi:\")) \{
        // $NON-NLS-1$
        return TextUtils.prepare(d.substring(4));
    \}
    return d;
\}" shape=ellipse]
146 [label="205:CtJavaDocImpl@/**
 * make a doi
 *
 * @param doi
 * \	\	the doi
 * @return the doi string
 */" shape=ellipse]
147 [label="219:Insert@INSERT" shape=ellipse]
148 [label="219:CtPackageReferenceImpl@org.optimizationBenchmarking.utils.text" shape=ellipse]
149 [label="219:CtTypeReferenceImpl@TextUtils" shape=ellipse]
150 [label="219:CtTypeAccessImpl@org.optimizationBenchmarking.utils.text.TextUtils" shape=ellipse]
0 -> 1 [label="AST"];
3 -> 4 [label="AST"];
5 -> 6 [label="AST"];
8 -> 7 [label="AST"];
8 -> 5 [label="AST"];
10 -> 9 [label="AST"];
10 -> 11 [label="AST"];
12 -> 13 [label="AST"];
12 -> 27 [label="Define-Use"];
12 -> 50 [label="Define-Use"];
12 -> 66 [label="Define-Use"];
12 -> 99 [label="Define-Use"];
12 -> 131 [label="Define-Use"];
12 -> 141 [label="Define-Use"];
14 -> 15 [label="AST"];
14 -> 16 [label="AST"];
14 -> 17 [label="AST"];
19 -> 20 [label="AST"];
21 -> 22 [label="AST"];
21 -> 12 [label="Data Dep"];
23 -> 18 [label="AST"];
23 -> 19 [label="AST"];
23 -> 14 [label="AST"];
23 -> 21 [label="AST"];
24 -> 25 [label="AST"];
26 -> 24 [label="AST"];
26 -> 12 [label="AST"];
26 -> 23 [label="AST"];
27 -> 28 [label="AST"];
29 -> 30 [label="AST"];
31 -> 32 [label="AST"];
31 -> 27 [label="AST"];
31 -> 29 [label="AST"];
31 -> 36 [label="Control Dep"];
31 -> 35 [label="Control Dep"];
31 -> 33 [label="Control Dep"];
33 -> 34 [label="AST"];
35 -> 33 [label="AST"];
36 -> 35 [label="AST"];
37 -> 31 [label="AST"];
37 -> 36 [label="AST"];
38 -> 39 [label="AST"];
38 -> 82 [label="Define-Use"];
38 -> 114 [label="Define-Use"];
40 -> 41 [label="AST"];
40 -> 42 [label="AST"];
44 -> 45 [label="AST"];
44 -> 46 [label="AST"];
44 -> 47 [label="AST"];
44 -> 48 [label="AST"];
50 -> 51 [label="AST"];
50 -> 38 [label="Data Dep"];
52 -> 53 [label="AST"];
54 -> 55 [label="AST"];
54 -> 56 [label="AST"];
54 -> 57 [label="AST"];
54 -> 58 [label="AST"];
60 -> 61 [label="AST"];
62 -> 63 [label="AST"];
62 -> 64 [label="AST"];
66 -> 67 [label="AST"];
66 -> 38 [label="Data Dep"];
68 -> 65 [label="AST"];
68 -> 66 [label="AST"];
68 -> 62 [label="AST"];
69 -> 70 [label="AST"];
71 -> 59 [label="AST"];
71 -> 60 [label="AST"];
71 -> 54 [label="AST"];
71 -> 68 [label="AST"];
71 -> 69 [label="AST"];
72 -> 49 [label="AST"];
72 -> 50 [label="AST"];
72 -> 44 [label="AST"];
72 -> 52 [label="AST"];
72 -> 71 [label="AST"];
73 -> 43 [label="AST"];
73 -> 72 [label="AST"];
73 -> 40 [label="AST"];
73 -> 147 [label="Action"];
74 -> 75 [label="AST"];
76 -> 74 [label="AST"];
76 -> 38 [label="AST"];
76 -> 73 [label="AST"];
77 -> 78 [label="AST"];
77 -> 79 [label="AST"];
77 -> 80 [label="AST"];
82 -> 83 [label="AST"];
84 -> 85 [label="AST"];
86 -> 81 [label="AST"];
86 -> 82 [label="AST"];
86 -> 77 [label="AST"];
86 -> 84 [label="AST"];
86 -> 107 [label="Control Dep"];
86 -> 105 [label="Control Dep"];
86 -> 104 [label="Control Dep"];
86 -> 87 [label="Control Dep"];
86 -> 92 [label="Control Dep"];
86 -> 103 [label="Control Dep"];
86 -> 94 [label="Control Dep"];
86 -> 99 [label="Control Dep"];
86 -> 101 [label="Control Dep"];
87 -> 88 [label="AST"];
87 -> 89 [label="AST"];
87 -> 90 [label="AST"];
92 -> 93 [label="AST"];
94 -> 95 [label="AST"];
94 -> 96 [label="AST"];
94 -> 97 [label="AST"];
99 -> 100 [label="AST"];
101 -> 102 [label="AST"];
103 -> 98 [label="AST"];
103 -> 99 [label="AST"];
103 -> 94 [label="AST"];
103 -> 101 [label="AST"];
104 -> 91 [label="AST"];
104 -> 92 [label="AST"];
104 -> 87 [label="AST"];
104 -> 103 [label="AST"];
105 -> 104 [label="AST"];
105 -> 106 [label="AST"];
107 -> 105 [label="AST"];
108 -> 86 [label="AST"];
108 -> 107 [label="AST"];
109 -> 110 [label="AST"];
109 -> 111 [label="AST"];
109 -> 112 [label="AST"];
114 -> 115 [label="AST"];
116 -> 117 [label="AST"];
118 -> 113 [label="AST"];
118 -> 114 [label="AST"];
118 -> 109 [label="AST"];
118 -> 116 [label="AST"];
118 -> 139 [label="Control Dep"];
118 -> 137 [label="Control Dep"];
118 -> 136 [label="Control Dep"];
118 -> 119 [label="Control Dep"];
118 -> 124 [label="Control Dep"];
118 -> 135 [label="Control Dep"];
118 -> 126 [label="Control Dep"];
118 -> 131 [label="Control Dep"];
118 -> 133 [label="Control Dep"];
119 -> 120 [label="AST"];
119 -> 121 [label="AST"];
119 -> 122 [label="AST"];
124 -> 125 [label="AST"];
126 -> 127 [label="AST"];
126 -> 128 [label="AST"];
126 -> 129 [label="AST"];
131 -> 132 [label="AST"];
133 -> 134 [label="AST"];
135 -> 130 [label="AST"];
135 -> 131 [label="AST"];
135 -> 126 [label="AST"];
135 -> 133 [label="AST"];
136 -> 123 [label="AST"];
136 -> 124 [label="AST"];
136 -> 119 [label="AST"];
136 -> 135 [label="AST"];
137 -> 136 [label="AST"];
137 -> 138 [label="AST"];
139 -> 137 [label="AST"];
140 -> 118 [label="AST"];
140 -> 139 [label="AST"];
141 -> 142 [label="AST"];
143 -> 141 [label="AST"];
144 -> 8 [label="AST"];
144 -> 10 [label="AST"];
144 -> 26 [label="AST"];
144 -> 37 [label="AST"];
144 -> 76 [label="AST"];
144 -> 108 [label="AST"];
144 -> 140 [label="AST"];
144 -> 143 [label="AST"];
145 -> 2 [label="AST"];
145 -> 0 [label="AST"];
145 -> 3 [label="AST"];
145 -> 144 [label="AST"];
145 -> 146 [label="AST"];
147 -> 150 [label="Action"];
149 -> 148 [label="AST"];
150 -> 149 [label="AST"];
}