digraph "buildMap#?,File,File,String[],FileNameMapper,Hashtable" {
0 [label="2:CtTypeReferenceImpl@void" shape=ellipse]
1 [label="3:CtParameterImpl@File fromDir" shape=ellipse]
2 [label="3:CtParameterImpl@File toDir" shape=ellipse]
3 [label="3:CtParameterImpl@String[] names" shape=ellipse]
4 [label="3:CtParameterImpl@FileNameMapper mapper" shape=ellipse]
5 [label="3:CtParameterImpl@Hashtable map" shape=ellipse]
6 [label="4:CtLocalVariableImpl@String[] toCopy = null" shape=ellipse]
7 [label="5:CtFieldReadImpl@forceOverwrite" shape=ellipse]
8 [label="6:CtVariableWriteImpl@toCopy" shape=ellipse]
9 [label="6:CtVariableReadImpl@names" shape=ellipse]
10 [label="6:CtAssignmentImpl@toCopy = names" shape=ellipse]
11 [label="5:CtBlockImpl@{\\n    toCopy = names;\\n}" shape=ellipse]
12 [label="8:CtLocalVariableImpl@SourceFileScanner ds = new SourceFileScanner()" shape=ellipse]
13 [label="9:CtVariableWriteImpl@toCopy" shape=ellipse]
14 [label="9:CtExecutableReferenceImpl@restrict(java.lang.String[],File,File,FileNameMapper)" shape=ellipse]
15 [label="9:CtVariableReadImpl@ds" shape=ellipse]
16 [label="9:CtVariableReadImpl@names" shape=ellipse]
17 [label="9:CtVariableReadImpl@fromDir" shape=ellipse]
18 [label="9:CtVariableReadImpl@toDir" shape=ellipse]
19 [label="9:CtVariableReadImpl@mapper" shape=ellipse]
20 [label="9:CtInvocationImpl@ds.restrict(names, fromDir, toDir, mapper)" shape=ellipse]
21 [label="9:CtAssignmentImpl@toCopy = ds.restrict(names, fromDir, toDir, mapper)" shape=ellipse]
22 [label="7:CtBlockImpl@{\\n    SourceFileScanner ds = new SourceFileScanner();\\n    toCopy = ds.restrict(names, fromDir, toDir, mapper);\\n}" shape=ellipse]
23 [label="5:CtIfImpl@if (forceOverwrite) {\\n    toCopy = names;\\n} else {\\n    SourceFileScanner ds = new SourceFileScanner();\\n    toCopy = ds.restrict(names, fromDir, toDir, mapper);\\n}" shape=ellipse]
24 [label="11:CtLocalVariableImpl@int i = 0" shape=ellipse]
25 [label="11:CtVariableReadImpl@i" shape=ellipse]
26 [label="11:CtVariableReadImpl@toCopy" shape=ellipse]
27 [label="11:CtFieldReadImpl@toCopy.length" shape=ellipse]
28 [label="11:CtBinaryOperatorImpl@i < toCopy.length" shape=ellipse]
29 [label="11:CtVariableWriteImpl@i" shape=ellipse]
30 [label="11:CtUnaryOperatorImpl@i++" shape=ellipse]
31 [label="12:CtLocalVariableImpl@File src = new File(fromDir, toCopy[i])" shape=ellipse]
32 [label="13:CtLocalVariableImpl@File dest = new File(toDir, mapper.mapFileName(toCopy[i])[0])" shape=ellipse]
33 [label="14:CtExecutableReferenceImpl@put()" shape=ellipse]
34 [label="14:CtVariableReadImpl@map" shape=ellipse]
35 [label="14:CtExecutableReferenceImpl@getAbsolutePath()" shape=ellipse]
36 [label="14:CtVariableReadImpl@src" shape=ellipse]
37 [label="14:CtInvocationImpl@src.getAbsolutePath()" shape=ellipse]
38 [label="14:CtExecutableReferenceImpl@getAbsolutePath()" shape=ellipse]
39 [label="14:CtVariableReadImpl@dest" shape=ellipse]
40 [label="14:CtInvocationImpl@dest.getAbsolutePath()" shape=ellipse]
41 [label="14:CtInvocationImpl@map.put(src.getAbsolutePath(), dest.getAbsolutePath())" shape=ellipse]
42 [label="11:CtBlockImpl@{\\n    File src = new File(fromDir, toCopy[i]);\\n    File dest = new File(toDir, mapper.mapFileName(toCopy[i])[0]);\\n    map.put(src.getAbsolutePath(), dest.getAbsolutePath());\\n}" shape=ellipse]
43 [label="11:CtForImpl@for (int i = 0; i < toCopy.length; i++) {\\n    File src = new File(fromDir, toCopy[i]);\\n    File dest = new File(toDir, mapper.mapFileName(toCopy[i])[0]);\\n    map.put(src.getAbsolutePath(), dest.getAbsolutePath());\\n}" shape=ellipse]
44 [label="3:CtBlockImpl@{\\n    String[] toCopy = null;\\n    if (forceOverwrite) {\\n        toCopy = names;\\n    } else {\\n        SourceFileScanner ds = new SourceFileScanner();\\n        toCopy = ds.restrict(names, fromDir, toDir, mapper);\\n    }\\n    for (int i = 0; i < toCopy.length; i++) {\\n        File src = new File(fromDir, toCopy[i]);\\n        File dest = new File(toDir, mapper.mapFileName(toCopy[i])[0]);\\n        map.put(src.getAbsolutePath(), dest.getAbsolutePath());\\n    }\\n}" shape=ellipse]
45 [label="2:CtMethodImpl@protected void buildMap(File fromDir, File toDir, String[] names, FileNameMapper mapper, Hashtable map) {\\n    String[] toCopy = null;\\n    if (forceOverwrite) {\\n        toCopy = names;\\n    } else {\\n        SourceFileScanner ds = new SourceFileScanner();\\n        toCopy = ds.restrict(names, fromDir, toDir, mapper);\\n    }\\n    for (int i = 0; i < toCopy.length; i++) {\\n        File src = new File(fromDir, toCopy[i]);\\n        File dest = new File(toDir, mapper.mapFileName(toCopy[i])[0]);\\n        map.put(src.getAbsolutePath(), dest.getAbsolutePath());\\n    }\\n}" shape=ellipse]
7 -> 11 [label="Control Dep"];
7 -> 10 [label="Control Dep"];
7 -> 8 [label="Control Dep"];
7 -> 9 [label="Control Dep"];
7 -> 22 [label="Control Dep"];
7 -> 12 [label="Control Dep"];
7 -> 21 [label="Control Dep"];
7 -> 13 [label="Control Dep"];
7 -> 20 [label="Control Dep"];
7 -> 14 [label="Control Dep"];
7 -> 15 [label="Control Dep"];
7 -> 16 [label="Control Dep"];
7 -> 17 [label="Control Dep"];
7 -> 18 [label="Control Dep"];
7 -> 19 [label="Control Dep"];
8 -> 26 [label="Define-Use"];
9 -> 8 [label="Data Dep"];
10 -> 8 [label=""];
10 -> 9 [label=""];
11 -> 10 [label=""];
13 -> 26 [label="Define-Use"];
15 -> 13 [label="Data Dep"];
16 -> 13 [label="Data Dep"];
17 -> 13 [label="Data Dep"];
18 -> 13 [label="Data Dep"];
19 -> 13 [label="Data Dep"];
20 -> 15 [label=""];
20 -> 14 [label=""];
20 -> 16 [label=""];
20 -> 17 [label=""];
20 -> 18 [label=""];
20 -> 19 [label=""];
21 -> 13 [label=""];
21 -> 20 [label=""];
22 -> 12 [label=""];
22 -> 21 [label=""];
23 -> 7 [label=""];
23 -> 11 [label=""];
23 -> 22 [label=""];
27 -> 26 [label=""];
28 -> 25 [label=""];
28 -> 27 [label=""];
28 -> 42 [label="Control Dep"];
28 -> 31 [label="Control Dep"];
28 -> 32 [label="Control Dep"];
28 -> 41 [label="Control Dep"];
28 -> 33 [label="Control Dep"];
28 -> 34 [label="Control Dep"];
28 -> 37 [label="Control Dep"];
28 -> 35 [label="Control Dep"];
28 -> 36 [label="Control Dep"];
28 -> 40 [label="Control Dep"];
28 -> 38 [label="Control Dep"];
28 -> 39 [label="Control Dep"];
30 -> 29 [label=""];
37 -> 36 [label=""];
37 -> 35 [label=""];
40 -> 39 [label=""];
40 -> 38 [label=""];
41 -> 34 [label=""];
41 -> 33 [label=""];
41 -> 37 [label=""];
41 -> 40 [label=""];
42 -> 31 [label=""];
42 -> 32 [label=""];
42 -> 41 [label=""];
43 -> 24 [label=""];
43 -> 28 [label=""];
43 -> 30 [label=""];
43 -> 42 [label=""];
44 -> 6 [label=""];
44 -> 23 [label=""];
44 -> 43 [label=""];
45 -> 0 [label=""];
45 -> 1 [label=""];
45 -> 2 [label=""];
45 -> 3 [label=""];
45 -> 4 [label=""];
45 -> 5 [label=""];
45 -> 44 [label=""];
}