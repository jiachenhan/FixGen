digraph "getFileExtension#?,String" {
0 [label="587:CtTypeReferenceImpl@String" shape=ellipse]
1 [label="587:CtPackageReferenceImpl@java.lang" shape=ellipse]
2 [label="587:CtVirtualElement@getFileExtension" shape=ellipse]
3 [label="587:CtParameterImpl@final String fileName" shape=ellipse]
4 [label="587:CtTypeReferenceImpl@String" shape=ellipse]
5 [label="588:CtTypeReferenceImpl@int" shape=ellipse]
6 [label="588:CtVirtualElement@last" shape=ellipse]
7 [label="588:CtLocalVariableImpl@final int last" shape=ellipse]
8 [label="588:CtVirtualElement@length" shape=ellipse]
9 [label="588:CtLocalVariableImpl@final int length" shape=ellipse]
10 [label="588:CtTypeReferenceImpl@int" shape=ellipse]
11 [label="590:CtVariableReadImpl@fileName" shape=ellipse]
12 [label="590:CtParameterReferenceImpl@fileName" shape=ellipse]
13 [label="590:CtLiteralImpl@null" shape=ellipse]
14 [label="590:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
15 [label="590:CtBinaryOperatorImpl@fileName == null" shape=ellipse]
16 [label="590:CtTypeReferenceImpl@boolean" shape=ellipse]
17 [label="591:CtLiteralImpl@null" shape=ellipse]
18 [label="591:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
19 [label="591:CtReturnImpl@return null" shape=ellipse]
20 [label="590:CtBlockImpl@\{
    return null;
\}" shape=ellipse]
21 [label="590:CtIfImpl@if (fileName == null) \{
    return null;
\}" shape=ellipse]
22 [label="594:CtVariableWriteImpl@length" shape=ellipse]
23 [label="594:CtLocalVariableReferenceImpl@length" shape=ellipse]
24 [label="594:CtExecutableReferenceImpl@length()" shape=ellipse]
25 [label="594:CtTypeReferenceImpl@String" shape=ellipse]
26 [label="594:CtTypeReferenceImpl@int" shape=ellipse]
27 [label="594:CtVirtualElement@length" shape=ellipse]
28 [label="594:CtVariableReadImpl@fileName" shape=ellipse]
29 [label="594:CtParameterReferenceImpl@fileName" shape=ellipse]
30 [label="594:CtInvocationImpl@fileName.length()" shape=ellipse]
31 [label="594:CtTypeReferenceImpl@int" shape=ellipse]
32 [label="594:CtAssignmentImpl@length = fileName.length()" shape=ellipse]
33 [label="595:CtVariableReadImpl@length" shape=ellipse]
34 [label="595:CtLocalVariableReferenceImpl@length" shape=ellipse]
35 [label="595:CtLiteralImpl@0" shape=ellipse]
36 [label="595:CtTypeReferenceImpl@int" shape=ellipse]
37 [label="595:CtBinaryOperatorImpl@length <= 0" shape=ellipse]
38 [label="595:CtTypeReferenceImpl@boolean" shape=ellipse]
39 [label="596:CtLiteralImpl@null" shape=ellipse]
40 [label="596:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
41 [label="596:CtReturnImpl@return null" shape=ellipse]
42 [label="595:CtBlockImpl@\{
    return null;
\}" shape=ellipse]
43 [label="595:CtIfImpl@if (length <= 0) \{
    return null;
\}" shape=ellipse]
44 [label="599:CtVariableWriteImpl@last" shape=ellipse]
45 [label="599:CtLocalVariableReferenceImpl@last" shape=ellipse]
46 [label="599:CtExecutableReferenceImpl@lastIndexOf(int)" shape=ellipse]
47 [label="599:CtTypeReferenceImpl@String" shape=ellipse]
48 [label="599:CtTypeReferenceImpl@int" shape=ellipse]
49 [label="599:CtTypeReferenceImpl@int" shape=ellipse]
50 [label="599:CtVirtualElement@lastIndexOf" shape=ellipse]
51 [label="599:CtVariableReadImpl@fileName" shape=ellipse]
52 [label="599:CtParameterReferenceImpl@fileName" shape=ellipse]
53 [label="599:CtLiteralImpl@'.'" shape=ellipse]
54 [label="599:CtTypeReferenceImpl@char" shape=ellipse]
55 [label="599:CtInvocationImpl@fileName.lastIndexOf('.')" shape=ellipse]
56 [label="599:CtTypeReferenceImpl@int" shape=ellipse]
57 [label="599:CtAssignmentImpl@last = fileName.lastIndexOf('.')" shape=ellipse]
58 [label="600:CtVariableReadImpl@last" shape=ellipse]
59 [label="600:CtLocalVariableReferenceImpl@last" shape=ellipse]
60 [label="600:CtLiteralImpl@0" shape=ellipse]
61 [label="600:CtTypeReferenceImpl@int" shape=ellipse]
62 [label="600:CtBinaryOperatorImpl@(last < 0)" shape=ellipse]
63 [label="600:CtTypeReferenceImpl@boolean" shape=ellipse]
64 [label="600:CtVariableReadImpl@last" shape=ellipse]
65 [label="600:CtLocalVariableReferenceImpl@last" shape=ellipse]
66 [label="600:CtVariableReadImpl@length" shape=ellipse]
67 [label="600:CtLocalVariableReferenceImpl@length" shape=ellipse]
68 [label="600:CtLiteralImpl@1" shape=ellipse]
69 [label="600:CtTypeReferenceImpl@int" shape=ellipse]
70 [label="600:CtBinaryOperatorImpl@(length - 1)" shape=ellipse]
71 [label="600:CtTypeReferenceImpl@int" shape=ellipse]
72 [label="600:CtBinaryOperatorImpl@(last >= (length - 1))" shape=ellipse]
73 [label="600:CtTypeReferenceImpl@boolean" shape=ellipse]
74 [label="600:CtBinaryOperatorImpl@(last < 0) || (last >= (length - 1))" shape=ellipse]
75 [label="600:CtTypeReferenceImpl@boolean" shape=ellipse]
76 [label="601:CtLiteralImpl@null" shape=ellipse]
77 [label="601:CtTypeReferenceImpl@<nulltype>" shape=ellipse]
78 [label="601:CtReturnImpl@return null" shape=ellipse]
79 [label="600:CtBlockImpl@\{
    return null;
\}" shape=ellipse]
80 [label="600:CtIfImpl@if ((last < 0) || (last >= (length - 1))) \{
    return null;
\}" shape=ellipse]
81 [label="603:CtExecutableReferenceImpl@toLowerCase()" shape=ellipse]
82 [label="603:CtTypeReferenceImpl@String" shape=ellipse]
83 [label="603:CtTypeReferenceImpl@String" shape=ellipse]
84 [label="603:CtVirtualElement@toLowerCase" shape=ellipse]
85 [label="603:CtExecutableReferenceImpl@substring(int)" shape=ellipse]
86 [label="603:CtTypeReferenceImpl@String" shape=ellipse]
87 [label="603:CtTypeReferenceImpl@String" shape=ellipse]
88 [label="603:CtTypeReferenceImpl@int" shape=ellipse]
89 [label="603:CtVirtualElement@substring" shape=ellipse]
90 [label="603:CtVariableReadImpl@fileName" shape=ellipse]
91 [label="603:CtParameterReferenceImpl@fileName" shape=ellipse]
92 [label="603:CtVariableReadImpl@last" shape=ellipse]
93 [label="603:CtLocalVariableReferenceImpl@last" shape=ellipse]
94 [label="603:CtLiteralImpl@1" shape=ellipse]
95 [label="603:CtTypeReferenceImpl@int" shape=ellipse]
96 [label="603:CtBinaryOperatorImpl@last + 1" shape=ellipse]
97 [label="603:CtTypeReferenceImpl@int" shape=ellipse]
98 [label="603:CtInvocationImpl@fileName.substring(last + 1)" shape=ellipse]
99 [label="603:CtInvocationImpl@fileName.substring(last + 1).toLowerCase()" shape=ellipse]
100 [label="603:CtReturnImpl@return fileName.substring(last + 1).toLowerCase()" shape=ellipse]
101 [label="587:CtBlockImpl@\{
    final int last;
    final int length;
    if (fileName == null) \{
        return null;
    \}
    length = fileName.length();
    if (length <= 0) \{
        return null;
    \}
    last = fileName.lastIndexOf('.');
    if ((last < 0) || (last >= (length - 1))) \{
        return null;
    \}
    return fileName.substring(last + 1).toLowerCase();
\}" shape=ellipse]
102 [label="587:CtMethodImpl@/**
 * Get the extension (file name suffix) of a given file name, not
 * including the dot and cast to lower case.
 *
 * @param fileName
 * \	\	the file name
 * @return the extension, or \{@code null\} if no extension exists or
\{@code fileName\} is \{@code null\}
 * @see #getName(Path)
 * @see #getFileExtension(Path)
 * @see #getFileNameWithoutExtension(Path)
 * @see #getFileNameWithoutExtension(String)
 */
public static final String getFileExtension(final String fileName) \{
    final int last;
    final int length;
    if (fileName == null) \{
        return null;
    \}
    length = fileName.length();
    if (length <= 0) \{
        return null;
    \}
    last = fileName.lastIndexOf('.');
    if ((last < 0) || (last >= (length - 1))) \{
        return null;
    \}
    return fileName.substring(last + 1).toLowerCase();
\}" shape=ellipse]
103 [label="574:CtJavaDocImpl@/**
 * Get the extension (file name suffix) of a given file name, not
 * including the dot and cast to lower case.
 *
 * @param fileName
 * \	\	the file name
 * @return the extension, or \{@code null\} if no extension exists or
\{@code fileName\} is \{@code null\}
 * @see #getName(Path)
 * @see #getFileExtension(Path)
 * @see #getFileNameWithoutExtension(Path)
 * @see #getFileNameWithoutExtension(String)
 */" shape=ellipse]
104 [label="603:Insert@INSERT" shape=ellipse]
105 [label="603:CtPackageReferenceImpl@org.optimizationBenchmarking.utils.text" shape=ellipse]
106 [label="603:CtTypeReferenceImpl@TextUtils" shape=ellipse]
107 [label="603:CtTypeAccessImpl@org.optimizationBenchmarking.utils.text.TextUtils" shape=ellipse]
0 -> 1 [label="AST"];
3 -> 4 [label="AST"];
7 -> 6 [label="AST"];
7 -> 5 [label="AST"];
9 -> 8 [label="AST"];
9 -> 10 [label="AST"];
11 -> 12 [label="AST"];
13 -> 14 [label="AST"];
15 -> 16 [label="AST"];
15 -> 11 [label="AST"];
15 -> 13 [label="AST"];
15 -> 20 [label="Control Dep"];
15 -> 19 [label="Control Dep"];
15 -> 17 [label="Control Dep"];
17 -> 18 [label="AST"];
19 -> 17 [label="AST"];
20 -> 19 [label="AST"];
21 -> 15 [label="AST"];
21 -> 20 [label="AST"];
22 -> 23 [label="AST"];
22 -> 33 [label="Define-Use"];
22 -> 66 [label="Define-Use"];
24 -> 25 [label="AST"];
24 -> 26 [label="AST"];
28 -> 29 [label="AST"];
28 -> 22 [label="Data Dep"];
30 -> 27 [label="AST"];
30 -> 28 [label="AST"];
30 -> 24 [label="AST"];
32 -> 31 [label="AST"];
32 -> 22 [label="AST"];
32 -> 30 [label="AST"];
33 -> 34 [label="AST"];
35 -> 36 [label="AST"];
37 -> 38 [label="AST"];
37 -> 33 [label="AST"];
37 -> 35 [label="AST"];
37 -> 42 [label="Control Dep"];
37 -> 41 [label="Control Dep"];
37 -> 39 [label="Control Dep"];
39 -> 40 [label="AST"];
41 -> 39 [label="AST"];
42 -> 41 [label="AST"];
43 -> 37 [label="AST"];
43 -> 42 [label="AST"];
44 -> 45 [label="AST"];
44 -> 58 [label="Define-Use"];
44 -> 64 [label="Define-Use"];
44 -> 92 [label="Define-Use"];
46 -> 47 [label="AST"];
46 -> 48 [label="AST"];
46 -> 49 [label="AST"];
51 -> 52 [label="AST"];
51 -> 44 [label="Data Dep"];
53 -> 54 [label="AST"];
55 -> 50 [label="AST"];
55 -> 51 [label="AST"];
55 -> 46 [label="AST"];
55 -> 53 [label="AST"];
57 -> 56 [label="AST"];
57 -> 44 [label="AST"];
57 -> 55 [label="AST"];
58 -> 59 [label="AST"];
60 -> 61 [label="AST"];
62 -> 63 [label="AST"];
62 -> 58 [label="AST"];
62 -> 60 [label="AST"];
64 -> 65 [label="AST"];
66 -> 67 [label="AST"];
68 -> 69 [label="AST"];
70 -> 71 [label="AST"];
70 -> 66 [label="AST"];
70 -> 68 [label="AST"];
72 -> 73 [label="AST"];
72 -> 64 [label="AST"];
72 -> 70 [label="AST"];
74 -> 75 [label="AST"];
74 -> 62 [label="AST"];
74 -> 72 [label="AST"];
74 -> 79 [label="Control Dep"];
74 -> 78 [label="Control Dep"];
74 -> 76 [label="Control Dep"];
76 -> 77 [label="AST"];
78 -> 76 [label="AST"];
79 -> 78 [label="AST"];
80 -> 74 [label="AST"];
80 -> 79 [label="AST"];
81 -> 82 [label="AST"];
81 -> 83 [label="AST"];
85 -> 86 [label="AST"];
85 -> 87 [label="AST"];
85 -> 88 [label="AST"];
90 -> 91 [label="AST"];
92 -> 93 [label="AST"];
94 -> 95 [label="AST"];
96 -> 97 [label="AST"];
96 -> 92 [label="AST"];
96 -> 94 [label="AST"];
98 -> 89 [label="AST"];
98 -> 90 [label="AST"];
98 -> 85 [label="AST"];
98 -> 96 [label="AST"];
99 -> 84 [label="AST"];
99 -> 98 [label="AST"];
99 -> 81 [label="AST"];
99 -> 104 [label="Action"];
100 -> 99 [label="AST"];
101 -> 7 [label="AST"];
101 -> 9 [label="AST"];
101 -> 21 [label="AST"];
101 -> 32 [label="AST"];
101 -> 43 [label="AST"];
101 -> 57 [label="AST"];
101 -> 80 [label="AST"];
101 -> 100 [label="AST"];
102 -> 2 [label="AST"];
102 -> 0 [label="AST"];
102 -> 3 [label="AST"];
102 -> 101 [label="AST"];
102 -> 103 [label="AST"];
104 -> 107 [label="Action"];
106 -> 105 [label="AST"];
107 -> 106 [label="AST"];
}