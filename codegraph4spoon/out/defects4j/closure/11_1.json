{
	"/Users/yumeng/JavaProjects/FixGen/data/d4j-info-2.0/buggy_fix/buggy/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeCheck.java":[
		{
			"vertexes":[
				445,
				103,
				58,
				60,
				57,
				169,
				168
			],
			"edges":[
				[
					"",
					"Action",
					"",
					"",
					"",
					"",
					""
				],
				[
					"Action",
					"",
					"",
					"",
					"",
					"",
					"AST"
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"AST"
				],
				[
					"",
					"AST",
					"",
					"",
					"",
					"AST",
					""
				]
			],
			"vertex_label":[
				1,
				1,
				0,
				0,
				0,
				1,
				1
			],
			"attribute_label":[
				{
					"445":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"103":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"58":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"60":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"57":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"169":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"168":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				}
			],
			"attributes":[
				{
					"445":{
						"locationInParent":"ACTION",
						"value2":"",
						"valueType":"no type",
						"nodeType":"class model.actions.Delete",
						"value":"DELETE"
					}
				},
				{
					"103":{
						"locationInParent":"CONDITION",
						"value2":"(com.google.javascript.rhino.Node.getJSType() != null) && com.google.javascript.rhino.Node.isAssign()",
						"valueType":"null type",
						"nodeType":"class spoon.support.reflect.code.CtBinaryOperatorImpl",
						"value":"(n.getJSType() != null) && parent.isAssign()"
					}
				},
				{
					"58":{
						"locationInParent":"METHOD_NAME",
						"value2":"isDict",
						"valueType":"no type",
						"nodeType":"class codegraph.CtVirtualElement",
						"value":"isDict"
					}
				},
				{
					"60":{
						"locationInParent":"TARGET",
						"value2":"com.google.javascript.rhino.jstype.JSType",
						"valueType":"com.google.javascript.rhino.jstype.JSType",
						"nodeType":"class spoon.support.reflect.code.CtVariableReadImpl",
						"value":"childType"
					}
				},
				{
					"57":{
						"locationInParent":"EXECUTABLE_REF",
						"value2":"isDict",
						"valueType":"boolean",
						"nodeType":"class spoon.support.reflect.reference.CtExecutableReferenceImpl",
						"value":"isDict"
					}
				},
				{
					"169":{
						"locationInParent":"ELSE",
						"value2":"exceed MAX_TOKEN_LENGTH:23 tokens",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtBlockImpl",
						"value":"exceed MAX_TOKEN_LENGTH:23 tokens"
					}
				},
				{
					"168":{
						"locationInParent":"STATEMENT",
						"value2":"exceed MAX_TOKEN_LENGTH:23 tokens",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtIfImpl",
						"value":"exceed MAX_TOKEN_LENGTH:23 tokens"
					}
				}
			],
			"edge_label":[
				[
					0,
					1,
					0,
					0,
					0,
					0,
					0
				],
				[
					1,
					0,
					0,
					0,
					0,
					0,
					1
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					1
				],
				[
					0,
					1,
					0,
					0,
					0,
					1,
					0
				]
			]
		},
		{
			"vertexes":[
				446,
				105,
				103,
				168
			],
			"edges":[
				[
					"",
					"Action",
					"",
					""
				],
				[
					"Action",
					"",
					"Control Dep",
					"AST"
				],
				[
					"",
					"Control Dep",
					"",
					"AST"
				],
				[
					"",
					"AST",
					"AST",
					""
				]
			],
			"vertex_label":[
				1,
				1,
				1,
				1
			],
			"attribute_label":[
				{
					"446":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"105":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"103":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"168":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				}
			],
			"attributes":[
				{
					"446":{
						"locationInParent":"ACTION",
						"value2":"",
						"valueType":"no type",
						"nodeType":"class model.actions.Delete",
						"value":"DELETE"
					}
				},
				{
					"105":{
						"locationInParent":"THEN",
						"value2":"{\n    return;\n}",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtBlockImpl",
						"value":"{\n    return;\n}"
					}
				},
				{
					"103":{
						"locationInParent":"CONDITION",
						"value2":"(com.google.javascript.rhino.Node.getJSType() != null) && com.google.javascript.rhino.Node.isAssign()",
						"valueType":"null type",
						"nodeType":"class spoon.support.reflect.code.CtBinaryOperatorImpl",
						"value":"(n.getJSType() != null) && parent.isAssign()"
					}
				},
				{
					"168":{
						"locationInParent":"STATEMENT",
						"value2":"exceed MAX_TOKEN_LENGTH:23 tokens",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtIfImpl",
						"value":"exceed MAX_TOKEN_LENGTH:23 tokens"
					}
				}
			],
			"edge_label":[
				[
					0,
					1,
					0,
					0
				],
				[
					1,
					0,
					1,
					1
				],
				[
					0,
					1,
					0,
					1
				],
				[
					0,
					1,
					1,
					0
				]
			]
		},
		{
			"vertexes":[
				447,
				170,
				186,
				188,
				27,
				38,
				54,
				185,
				58,
				60,
				57
			],
			"edges":[
				[
					"",
					"Action",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"Action",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"AST",
					"",
					"AST",
					"AST",
					"AST",
					"AST",
					"AST",
					"",
					"",
					""
				],
				[
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				]
			],
			"vertex_label":[
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				0,
				0,
				0
			],
			"attribute_label":[
				{
					"447":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"170":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"186":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"188":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"27":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"38":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"54":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"185":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"58":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"60":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"57":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				}
			],
			"attributes":[
				{
					"447":{
						"locationInParent":"ACTION",
						"value2":"",
						"valueType":"no type",
						"nodeType":"class model.actions.Delete",
						"value":"DELETE"
					}
				},
				{
					"170":{
						"locationInParent":"STATEMENT",
						"value2":"exceed MAX_TOKEN_LENGTH:31 tokens",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtIfImpl",
						"value":"exceed MAX_TOKEN_LENGTH:31 tokens"
					}
				},
				{
					"186":{
						"locationInParent":"BODY",
						"value2":"exceed MAX_TOKEN_LENGTH:46 tokens",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtBlockImpl",
						"value":"exceed MAX_TOKEN_LENGTH:46 tokens"
					}
				},
				{
					"188":{
						"locationInParent":"TYPE_MEMBER",
						"value2":"exceed MAX_TOKEN_LENGTH:55 tokens",
						"valueType":"void",
						"nodeType":"class spoon.support.reflect.declaration.CtMethodImpl",
						"value":"exceed MAX_TOKEN_LENGTH:55 tokens"
					}
				},
				{
					"27":{
						"locationInParent":"STATEMENT",
						"value2":"// obj.prop or obj.method()\n// Lots of types can appear on the left, a call to a void function can\n// never be on the left. getPropertyType will decide what is acceptable\n// and what isn't.\ncom.google.javascript.rhino.Node property = com.google.javascript.rhino.Node.getLastChild()",
						"valueType":"com.google.javascript.rhino.Node",
						"nodeType":"class spoon.support.reflect.code.CtLocalVariableImpl",
						"value":"// obj.prop or obj.method()\n// Lots of types can appear on the left, a call to a void function can\n// never be on the left. getPropertyType will decide what is acceptable\n// and what isn't.\nNode property = n.getLastChild()"
					}
				},
				{
					"38":{
						"locationInParent":"STATEMENT",
						"value2":"com.google.javascript.rhino.Node objNode = com.google.javascript.rhino.Node.getFirstChild()",
						"valueType":"com.google.javascript.rhino.Node",
						"nodeType":"class spoon.support.reflect.code.CtLocalVariableImpl",
						"value":"Node objNode = n.getFirstChild()"
					}
				},
				{
					"54":{
						"locationInParent":"STATEMENT",
						"value2":"com.google.javascript.rhino.jstype.JSType childType = getJSType(com.google.javascript.rhino.Node)",
						"valueType":"com.google.javascript.rhino.jstype.JSType",
						"nodeType":"class spoon.support.reflect.code.CtLocalVariableImpl",
						"value":"JSType childType = getJSType(objNode)"
					}
				},
				{
					"185":{
						"locationInParent":"STATEMENT",
						"value2":"ensureTyped(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node)",
						"valueType":"void",
						"nodeType":"class spoon.support.reflect.code.CtInvocationImpl",
						"value":"ensureTyped(t, n)"
					}
				},
				{
					"58":{
						"locationInParent":"METHOD_NAME",
						"value2":"isDict",
						"valueType":"no type",
						"nodeType":"class codegraph.CtVirtualElement",
						"value":"isDict"
					}
				},
				{
					"60":{
						"locationInParent":"TARGET",
						"value2":"com.google.javascript.rhino.jstype.JSType",
						"valueType":"com.google.javascript.rhino.jstype.JSType",
						"nodeType":"class spoon.support.reflect.code.CtVariableReadImpl",
						"value":"childType"
					}
				},
				{
					"57":{
						"locationInParent":"EXECUTABLE_REF",
						"value2":"isDict",
						"valueType":"boolean",
						"nodeType":"class spoon.support.reflect.reference.CtExecutableReferenceImpl",
						"value":"isDict"
					}
				}
			],
			"edge_label":[
				[
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					1,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					1,
					0,
					1,
					1,
					1,
					1,
					1,
					0,
					0,
					0
				],
				[
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				]
			]
		},
		{
			"vertexes":[
				448,
				168,
				61,
				58,
				60,
				57,
				169,
				186,
				188,
				27,
				38,
				54,
				185
			],
			"edges":[
				[
					"",
					"Action",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"Action",
					"",
					"Control Dep",
					"",
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"Control Dep",
					"",
					"AST",
					"AST",
					"AST",
					"Control Dep",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"AST",
					"Control Dep",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"AST",
					"AST",
					"AST",
					"AST"
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					""
				]
			],
			"vertex_label":[
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				0,
				0,
				0,
				0,
				0,
				0
			],
			"attribute_label":[
				{
					"448":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"168":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"61":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"58":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"60":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"57":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"169":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"186":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"188":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"27":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"38":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"54":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"185":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				}
			],
			"attributes":[
				{
					"448":{
						"locationInParent":"ACTION",
						"value2":"",
						"valueType":"no type",
						"nodeType":"class model.actions.Move",
						"value":"MOVE"
					}
				},
				{
					"168":{
						"locationInParent":"STATEMENT",
						"value2":"exceed MAX_TOKEN_LENGTH:23 tokens",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtIfImpl",
						"value":"exceed MAX_TOKEN_LENGTH:23 tokens"
					}
				},
				{
					"61":{
						"locationInParent":"CONDITION",
						"value2":"com.google.javascript.rhino.jstype.JSType.isDict()",
						"valueType":"boolean",
						"nodeType":"class spoon.support.reflect.code.CtInvocationImpl",
						"value":"childType.isDict()"
					}
				},
				{
					"58":{
						"locationInParent":"METHOD_NAME",
						"value2":"isDict",
						"valueType":"no type",
						"nodeType":"class codegraph.CtVirtualElement",
						"value":"isDict"
					}
				},
				{
					"60":{
						"locationInParent":"TARGET",
						"value2":"com.google.javascript.rhino.jstype.JSType",
						"valueType":"com.google.javascript.rhino.jstype.JSType",
						"nodeType":"class spoon.support.reflect.code.CtVariableReadImpl",
						"value":"childType"
					}
				},
				{
					"57":{
						"locationInParent":"EXECUTABLE_REF",
						"value2":"isDict",
						"valueType":"boolean",
						"nodeType":"class spoon.support.reflect.reference.CtExecutableReferenceImpl",
						"value":"isDict"
					}
				},
				{
					"169":{
						"locationInParent":"ELSE",
						"value2":"exceed MAX_TOKEN_LENGTH:23 tokens",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtBlockImpl",
						"value":"exceed MAX_TOKEN_LENGTH:23 tokens"
					}
				},
				{
					"186":{
						"locationInParent":"BODY",
						"value2":"exceed MAX_TOKEN_LENGTH:46 tokens",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtBlockImpl",
						"value":"exceed MAX_TOKEN_LENGTH:46 tokens"
					}
				},
				{
					"188":{
						"locationInParent":"TYPE_MEMBER",
						"value2":"exceed MAX_TOKEN_LENGTH:55 tokens",
						"valueType":"void",
						"nodeType":"class spoon.support.reflect.declaration.CtMethodImpl",
						"value":"exceed MAX_TOKEN_LENGTH:55 tokens"
					}
				},
				{
					"27":{
						"locationInParent":"STATEMENT",
						"value2":"// obj.prop or obj.method()\n// Lots of types can appear on the left, a call to a void function can\n// never be on the left. getPropertyType will decide what is acceptable\n// and what isn't.\ncom.google.javascript.rhino.Node property = com.google.javascript.rhino.Node.getLastChild()",
						"valueType":"com.google.javascript.rhino.Node",
						"nodeType":"class spoon.support.reflect.code.CtLocalVariableImpl",
						"value":"// obj.prop or obj.method()\n// Lots of types can appear on the left, a call to a void function can\n// never be on the left. getPropertyType will decide what is acceptable\n// and what isn't.\nNode property = n.getLastChild()"
					}
				},
				{
					"38":{
						"locationInParent":"STATEMENT",
						"value2":"com.google.javascript.rhino.Node objNode = com.google.javascript.rhino.Node.getFirstChild()",
						"valueType":"com.google.javascript.rhino.Node",
						"nodeType":"class spoon.support.reflect.code.CtLocalVariableImpl",
						"value":"Node objNode = n.getFirstChild()"
					}
				},
				{
					"54":{
						"locationInParent":"STATEMENT",
						"value2":"com.google.javascript.rhino.jstype.JSType childType = getJSType(com.google.javascript.rhino.Node)",
						"valueType":"com.google.javascript.rhino.jstype.JSType",
						"nodeType":"class spoon.support.reflect.code.CtLocalVariableImpl",
						"value":"JSType childType = getJSType(objNode)"
					}
				},
				{
					"185":{
						"locationInParent":"STATEMENT",
						"value2":"ensureTyped(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node)",
						"valueType":"void",
						"nodeType":"class spoon.support.reflect.code.CtInvocationImpl",
						"value":"ensureTyped(t, n)"
					}
				}
			],
			"edge_label":[
				[
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					1,
					0,
					1,
					0,
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					1,
					0,
					1,
					1,
					1,
					1,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					1,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				]
			]
		}
	]
}