{
	"/Users/yumeng/JavaProjects/FixGen/data/d4j-info-2.0/buggy_fix/buggy/math/math_48_buggy/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java":[
		{
			"vertexes":[
				1375,
				288,
				244,
				289
			],
			"edges":[
				[
					"",
					"Action",
					"",
					""
				],
				[
					"Action",
					"",
					"Control Dep",
					"AST"
				],
				[
					"",
					"Control Dep",
					"",
					"Control Dep"
				],
				[
					"",
					"AST",
					"Control Dep",
					""
				]
			],
			"vertex_label":[
				1,
				1,
				1,
				1
			],
			"attribute_label":[
				{
					"1375":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"288":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"244":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"289":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				}
			],
			"attributes":[
				{
					"1375":{
						"locationInParent":"ACTION",
						"value2":"",
						"valueType":"no type",
						"nodeType":"class model.actions.Delete",
						"value":"DELETE"
					}
				},
				{
					"288":{
						"locationInParent":"STATEMENT",
						"value2":"// Detect early that algorithm is stuck, instead of waiting\n// for the maximum number of iterations to be exceeded.\nbreak",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtBreakImpl",
						"value":"// Detect early that algorithm is stuck, instead of waiting\n// for the maximum number of iterations to be exceeded.\nbreak"
					}
				},
				{
					"244":{
						"locationInParent":"EXPRESSION",
						"value2":"org.apache.commons.math.analysis.solvers.BaseSecantSolver$Method",
						"valueType":"org.apache.commons.math.analysis.solvers.BaseSecantSolver$Method",
						"nodeType":"class spoon.support.reflect.code.CtFieldReadImpl",
						"value":"method"
					}
				},
				{
					"289":{
						"locationInParent":"CASE",
						"value2":"case REGULA_FALSI :\n    // Detect early that algorithm is stuck, instead of waiting\n    // for the maximum number of iterations to be exceeded.\n    break;",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtCaseImpl",
						"value":"case REGULA_FALSI :\n    // Detect early that algorithm is stuck, instead of waiting\n    // for the maximum number of iterations to be exceeded.\n    break;"
					}
				}
			],
			"edge_label":[
				[
					0,
					1,
					0,
					0
				],
				[
					1,
					0,
					1,
					1
				],
				[
					0,
					1,
					0,
					1
				],
				[
					0,
					1,
					1,
					0
				]
			]
		},
		{
			"vertexes":[
				1376,
				289,
				244,
				297,
				288,
				1380,
				1379,
				1378,
				1383,
				1382,
				1381,
				1384,
				1385,
				1377,
				1393,
				1392,
				1391,
				1390,
				1387,
				1386,
				1389,
				1388,
				1396,
				1394,
				1395
			],
			"edges":[
				[
					"",
					"Action",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"Action",
					"",
					""
				],
				[
					"Action",
					"",
					"Control Dep",
					"AST",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"Control Dep",
					"",
					"AST",
					"Control Dep",
					"Control Dep",
					"",
					"",
					"Control Dep",
					"",
					"",
					"Control Dep",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"Control Dep",
					"",
					""
				],
				[
					"",
					"AST",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"AST",
					"Control Dep",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"Control Dep",
					"",
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"AST",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"Control Dep",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"Control Dep",
					"",
					"",
					"AST",
					"",
					"",
					"AST",
					"",
					"",
					"",
					"AST",
					"AST",
					"Control Dep",
					"Control Dep",
					"Control Dep",
					"Control Dep",
					"",
					"",
					"",
					"",
					"AST",
					"",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"Control Dep",
					"",
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"Control Dep",
					"",
					"",
					"AST",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"Control Dep",
					"",
					"",
					"",
					"AST",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"Control Dep",
					"",
					"",
					"",
					"",
					"AST",
					"",
					"AST",
					"",
					"AST",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"",
					"AST",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"",
					"",
					"",
					"AST",
					"",
					"",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"",
					"",
					"",
					""
				],
				[
					"Action",
					"",
					"Control Dep",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"AST"
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"",
					""
				]
			],
			"vertex_label":[
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1
			],
			"attribute_label":[
				{
					"1376":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"289":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"244":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"297":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"288":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"1380":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"1379":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"1378":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"1383":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"1382":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"1381":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"1384":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"1385":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"1377":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"1393":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"1392":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"1391":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"1390":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"1387":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"1386":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"1389":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"1388":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"1396":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"1394":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"1395":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				}
			],
			"attributes":[
				{
					"1376":{
						"locationInParent":"ACTION",
						"value2":"",
						"valueType":"no type",
						"nodeType":"class model.actions.Insert",
						"value":"INSERT"
					}
				},
				{
					"289":{
						"locationInParent":"CASE",
						"value2":"case REGULA_FALSI :\n    // Detect early that algorithm is stuck, instead of waiting\n    // for the maximum number of iterations to be exceeded.\n    break;",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtCaseImpl",
						"value":"case REGULA_FALSI :\n    // Detect early that algorithm is stuck, instead of waiting\n    // for the maximum number of iterations to be exceeded.\n    break;"
					}
				},
				{
					"244":{
						"locationInParent":"EXPRESSION",
						"value2":"org.apache.commons.math.analysis.solvers.BaseSecantSolver$Method",
						"valueType":"org.apache.commons.math.analysis.solvers.BaseSecantSolver$Method",
						"nodeType":"class spoon.support.reflect.code.CtFieldReadImpl",
						"value":"method"
					}
				},
				{
					"297":{
						"locationInParent":"STATEMENT",
						"value2":"exceed MAX_TOKEN_LENGTH:21 tokens",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtSwitchImpl",
						"value":"exceed MAX_TOKEN_LENGTH:21 tokens"
					}
				},
				{
					"288":{
						"locationInParent":"STATEMENT",
						"value2":"// Detect early that algorithm is stuck, instead of waiting\n// for the maximum number of iterations to be exceeded.\nbreak",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtBreakImpl",
						"value":"// Detect early that algorithm is stuck, instead of waiting\n// for the maximum number of iterations to be exceeded.\nbreak"
					}
				},
				{
					"1380":{
						"locationInParent":"LEFT_OPERAND",
						"value2":"double",
						"valueType":"double",
						"nodeType":"class spoon.support.reflect.code.CtVariableReadImpl",
						"value":"x"
					}
				},
				{
					"1379":{
						"locationInParent":"VARIABLE",
						"value2":"double",
						"valueType":"double",
						"nodeType":"class spoon.support.reflect.reference.CtLocalVariableReferenceImpl",
						"value":"x"
					}
				},
				{
					"1378":{
						"locationInParent":"TYPE",
						"value2":"double",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.reference.CtTypeReferenceImpl",
						"value":"double"
					}
				},
				{
					"1383":{
						"locationInParent":"RIGHT_OPERAND",
						"value2":"double",
						"valueType":"double",
						"nodeType":"class spoon.support.reflect.code.CtVariableReadImpl",
						"value":"x1"
					}
				},
				{
					"1382":{
						"locationInParent":"VARIABLE",
						"value2":"double",
						"valueType":"double",
						"nodeType":"class spoon.support.reflect.reference.CtLocalVariableReferenceImpl",
						"value":"x1"
					}
				},
				{
					"1381":{
						"locationInParent":"TYPE",
						"value2":"double",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.reference.CtTypeReferenceImpl",
						"value":"double"
					}
				},
				{
					"1384":{
						"locationInParent":"CONDITION",
						"value2":"double == double",
						"valueType":"boolean",
						"nodeType":"class spoon.support.reflect.code.CtBinaryOperatorImpl",
						"value":"x == x1"
					}
				},
				{
					"1385":{
						"locationInParent":"OPERATOR_KIND",
						"value2":"EQ",
						"valueType":"no type",
						"nodeType":"class codegraph.CtVirtualElement",
						"value":"EQ"
					}
				},
				{
					"1377":{
						"locationInParent":"TYPE",
						"value2":"boolean",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.reference.CtTypeReferenceImpl",
						"value":"boolean"
					}
				},
				{
					"1393":{
						"locationInParent":"THEN",
						"value2":"{\n    throw new org.apache.commons.math.exception.ConvergenceException();\n}",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtBlockImpl",
						"value":"{\n    throw new ConvergenceException();\n}"
					}
				},
				{
					"1392":{
						"locationInParent":"STATEMENT",
						"value2":"throw new org.apache.commons.math.exception.ConvergenceException()",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtThrowImpl",
						"value":"throw new ConvergenceException()"
					}
				},
				{
					"1391":{
						"locationInParent":"EXPRESSION",
						"value2":"new org.apache.commons.math.exception.ConvergenceException()",
						"valueType":"org.apache.commons.math.exception.ConvergenceException",
						"nodeType":"class spoon.support.reflect.code.CtConstructorCallImpl",
						"value":"new ConvergenceException()"
					}
				},
				{
					"1390":{
						"locationInParent":"EXECUTABLE_REF",
						"value2":"<init>",
						"valueType":"org.apache.commons.math.exception.ConvergenceException",
						"nodeType":"class spoon.support.reflect.reference.CtExecutableReferenceImpl",
						"value":"<init>"
					}
				},
				{
					"1387":{
						"locationInParent":"DECLARING_TYPE",
						"value2":"org.apache.commons.math.exception.ConvergenceException",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.reference.CtTypeReferenceImpl",
						"value":"ConvergenceException"
					}
				},
				{
					"1386":{
						"locationInParent":"PACKAGE_REF",
						"value2":"org.apache.commons.math.exception",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.reference.CtPackageReferenceImpl",
						"value":"org.apache.commons.math.exception"
					}
				},
				{
					"1389":{
						"locationInParent":"TYPE",
						"value2":"org.apache.commons.math.exception.ConvergenceException",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.reference.CtTypeReferenceImpl",
						"value":"ConvergenceException"
					}
				},
				{
					"1388":{
						"locationInParent":"PACKAGE_REF",
						"value2":"org.apache.commons.math.exception",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.reference.CtPackageReferenceImpl",
						"value":"org.apache.commons.math.exception"
					}
				},
				{
					"1396":{
						"locationInParent":"STATEMENT",
						"value2":"// Detect early that algorithm is stuck, instead of waiting\n// for the maximum number of iterations to be exceeded.\nif (double == double) {\n    throw new org.apache.commons.math.exception.ConvergenceException();\n}",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtIfImpl",
						"value":"// Detect early that algorithm is stuck, instead of waiting\n// for the maximum number of iterations to be exceeded.\nif (x == x1) {\n    throw new ConvergenceException();\n}"
					}
				},
				{
					"1394":{
						"locationInParent":"COMMENT",
						"value2":"// Detect early that algorithm is stuck, instead of waiting",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtCommentImpl",
						"value":"// Detect early that algorithm is stuck, instead of waiting"
					}
				},
				{
					"1395":{
						"locationInParent":"COMMENT",
						"value2":"// for the maximum number of iterations to be exceeded.",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtCommentImpl",
						"value":"// for the maximum number of iterations to be exceeded."
					}
				}
			],
			"edge_label":[
				[
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					0
				],
				[
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					1,
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					0
				],
				[
					0,
					1,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					1,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					1,
					0,
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					1,
					0,
					0,
					1,
					0,
					0,
					1,
					0,
					0,
					0,
					1,
					1,
					1,
					1,
					1,
					1,
					0,
					0,
					0,
					0,
					1,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					0,
					1,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					0,
					0,
					1,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					1,
					0,
					1,
					0,
					1,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					1,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					0,
					0,
					1,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					0,
					0,
					0
				],
				[
					1,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					1
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					0
				]
			]
		},
		{
			"vertexes":[
				1397,
				289,
				244,
				297,
				1398
			],
			"edges":[
				[
					"",
					"Action",
					"",
					"",
					"Action"
				],
				[
					"Action",
					"",
					"Control Dep",
					"AST",
					""
				],
				[
					"",
					"Control Dep",
					"",
					"AST",
					"Control Dep"
				],
				[
					"",
					"AST",
					"AST",
					"",
					""
				],
				[
					"Action",
					"",
					"Control Dep",
					"",
					""
				]
			],
			"vertex_label":[
				1,
				1,
				1,
				1,
				1
			],
			"attribute_label":[
				{
					"1397":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"289":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"244":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"297":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"1398":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				}
			],
			"attributes":[
				{
					"1397":{
						"locationInParent":"ACTION",
						"value2":"",
						"valueType":"no type",
						"nodeType":"class model.actions.Insert",
						"value":"INSERT"
					}
				},
				{
					"289":{
						"locationInParent":"CASE",
						"value2":"case REGULA_FALSI :\n    // Detect early that algorithm is stuck, instead of waiting\n    // for the maximum number of iterations to be exceeded.\n    break;",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtCaseImpl",
						"value":"case REGULA_FALSI :\n    // Detect early that algorithm is stuck, instead of waiting\n    // for the maximum number of iterations to be exceeded.\n    break;"
					}
				},
				{
					"244":{
						"locationInParent":"EXPRESSION",
						"value2":"org.apache.commons.math.analysis.solvers.BaseSecantSolver$Method",
						"valueType":"org.apache.commons.math.analysis.solvers.BaseSecantSolver$Method",
						"nodeType":"class spoon.support.reflect.code.CtFieldReadImpl",
						"value":"method"
					}
				},
				{
					"297":{
						"locationInParent":"STATEMENT",
						"value2":"exceed MAX_TOKEN_LENGTH:21 tokens",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtSwitchImpl",
						"value":"exceed MAX_TOKEN_LENGTH:21 tokens"
					}
				},
				{
					"1398":{
						"locationInParent":"STATEMENT",
						"value2":"break",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtBreakImpl",
						"value":"break"
					}
				}
			],
			"edge_label":[
				[
					0,
					1,
					0,
					0,
					1
				],
				[
					1,
					0,
					1,
					1,
					0
				],
				[
					0,
					1,
					0,
					1,
					1
				],
				[
					0,
					1,
					1,
					0,
					0
				],
				[
					1,
					0,
					1,
					0,
					0
				]
			]
		},
		{
			"vertexes":[
				1399,
				286,
				288,
				1396,
				1394,
				289
			],
			"edges":[
				[
					"",
					"Action",
					"",
					"",
					"Action",
					""
				],
				[
					"Action",
					"",
					"AST",
					"",
					"",
					""
				],
				[
					"",
					"AST",
					"",
					"",
					"",
					"AST"
				],
				[
					"",
					"",
					"",
					"",
					"AST",
					""
				],
				[
					"Action",
					"",
					"",
					"AST",
					"",
					""
				],
				[
					"",
					"",
					"AST",
					"",
					"",
					""
				]
			],
			"vertex_label":[
				1,
				1,
				1,
				1,
				1,
				1
			],
			"attribute_label":[
				{
					"1399":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"286":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"288":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"1396":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"1394":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"289":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				}
			],
			"attributes":[
				{
					"1399":{
						"locationInParent":"ACTION",
						"value2":"",
						"valueType":"no type",
						"nodeType":"class model.actions.Move",
						"value":"MOVE"
					}
				},
				{
					"286":{
						"locationInParent":"COMMENT",
						"value2":"// Detect early that algorithm is stuck, instead of waiting",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtCommentImpl",
						"value":"// Detect early that algorithm is stuck, instead of waiting"
					}
				},
				{
					"288":{
						"locationInParent":"STATEMENT",
						"value2":"// Detect early that algorithm is stuck, instead of waiting\n// for the maximum number of iterations to be exceeded.\nbreak",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtBreakImpl",
						"value":"// Detect early that algorithm is stuck, instead of waiting\n// for the maximum number of iterations to be exceeded.\nbreak"
					}
				},
				{
					"1396":{
						"locationInParent":"STATEMENT",
						"value2":"// Detect early that algorithm is stuck, instead of waiting\n// for the maximum number of iterations to be exceeded.\nif (double == double) {\n    throw new org.apache.commons.math.exception.ConvergenceException();\n}",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtIfImpl",
						"value":"// Detect early that algorithm is stuck, instead of waiting\n// for the maximum number of iterations to be exceeded.\nif (x == x1) {\n    throw new ConvergenceException();\n}"
					}
				},
				{
					"1394":{
						"locationInParent":"COMMENT",
						"value2":"// Detect early that algorithm is stuck, instead of waiting",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtCommentImpl",
						"value":"// Detect early that algorithm is stuck, instead of waiting"
					}
				},
				{
					"289":{
						"locationInParent":"CASE",
						"value2":"case REGULA_FALSI :\n    // Detect early that algorithm is stuck, instead of waiting\n    // for the maximum number of iterations to be exceeded.\n    break;",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtCaseImpl",
						"value":"case REGULA_FALSI :\n    // Detect early that algorithm is stuck, instead of waiting\n    // for the maximum number of iterations to be exceeded.\n    break;"
					}
				}
			],
			"edge_label":[
				[
					0,
					1,
					0,
					0,
					1,
					0
				],
				[
					1,
					0,
					1,
					0,
					0,
					0
				],
				[
					0,
					1,
					0,
					0,
					0,
					1
				],
				[
					0,
					0,
					0,
					0,
					1,
					0
				],
				[
					1,
					0,
					0,
					1,
					0,
					0
				],
				[
					0,
					0,
					1,
					0,
					0,
					0
				]
			]
		},
		{
			"vertexes":[
				1400,
				287,
				288,
				1396,
				1395,
				289
			],
			"edges":[
				[
					"",
					"Action",
					"",
					"",
					"Action",
					""
				],
				[
					"Action",
					"",
					"AST",
					"",
					"",
					""
				],
				[
					"",
					"AST",
					"",
					"",
					"",
					"AST"
				],
				[
					"",
					"",
					"",
					"",
					"AST",
					""
				],
				[
					"Action",
					"",
					"",
					"AST",
					"",
					""
				],
				[
					"",
					"",
					"AST",
					"",
					"",
					""
				]
			],
			"vertex_label":[
				1,
				1,
				1,
				1,
				1,
				1
			],
			"attribute_label":[
				{
					"1400":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"287":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"288":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"1396":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"1395":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"289":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				}
			],
			"attributes":[
				{
					"1400":{
						"locationInParent":"ACTION",
						"value2":"",
						"valueType":"no type",
						"nodeType":"class model.actions.Move",
						"value":"MOVE"
					}
				},
				{
					"287":{
						"locationInParent":"COMMENT",
						"value2":"// for the maximum number of iterations to be exceeded.",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtCommentImpl",
						"value":"// for the maximum number of iterations to be exceeded."
					}
				},
				{
					"288":{
						"locationInParent":"STATEMENT",
						"value2":"// Detect early that algorithm is stuck, instead of waiting\n// for the maximum number of iterations to be exceeded.\nbreak",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtBreakImpl",
						"value":"// Detect early that algorithm is stuck, instead of waiting\n// for the maximum number of iterations to be exceeded.\nbreak"
					}
				},
				{
					"1396":{
						"locationInParent":"STATEMENT",
						"value2":"// Detect early that algorithm is stuck, instead of waiting\n// for the maximum number of iterations to be exceeded.\nif (double == double) {\n    throw new org.apache.commons.math.exception.ConvergenceException();\n}",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtIfImpl",
						"value":"// Detect early that algorithm is stuck, instead of waiting\n// for the maximum number of iterations to be exceeded.\nif (x == x1) {\n    throw new ConvergenceException();\n}"
					}
				},
				{
					"1395":{
						"locationInParent":"COMMENT",
						"value2":"// for the maximum number of iterations to be exceeded.",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtCommentImpl",
						"value":"// for the maximum number of iterations to be exceeded."
					}
				},
				{
					"289":{
						"locationInParent":"CASE",
						"value2":"case REGULA_FALSI :\n    // Detect early that algorithm is stuck, instead of waiting\n    // for the maximum number of iterations to be exceeded.\n    break;",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtCaseImpl",
						"value":"case REGULA_FALSI :\n    // Detect early that algorithm is stuck, instead of waiting\n    // for the maximum number of iterations to be exceeded.\n    break;"
					}
				}
			],
			"edge_label":[
				[
					0,
					1,
					0,
					0,
					1,
					0
				],
				[
					1,
					0,
					1,
					0,
					0,
					0
				],
				[
					0,
					1,
					0,
					0,
					0,
					1
				],
				[
					0,
					0,
					0,
					0,
					1,
					0
				],
				[
					1,
					0,
					0,
					1,
					0,
					0
				],
				[
					0,
					0,
					1,
					0,
					0,
					0
				]
			]
		}
	]
}