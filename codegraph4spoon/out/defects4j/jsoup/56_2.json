{
	"/Users/yumeng/JavaProjects/FixGen/data/d4j-info-2.0/buggy_fix/buggy/jsoup/jsoup_56_buggy/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java":[
		{
			"vertexes":[
				466,
				101,
				50,
				175,
				148,
				64,
				60,
				59,
				103,
				114,
				470,
				469,
				468,
				467,
				473,
				472,
				471,
				474,
				475
			],
			"edges":[
				[
					"",
					"Action",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"Action",
					""
				],
				[
					"Action",
					"",
					"Control Dep",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"Control Dep",
					"",
					"AST",
					"Control Dep",
					"Control Dep",
					"Control Dep",
					"Control Dep",
					"Control Dep",
					"Control Dep",
					"Control Dep",
					"",
					"",
					"",
					"Control Dep",
					"",
					"",
					"Control Dep",
					""
				],
				[
					"",
					"",
					"AST",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"Control Dep",
					"AST",
					"",
					"AST",
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"Control Dep",
					"",
					"AST",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"Control Dep",
					"",
					"",
					"AST",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"Control Dep",
					"",
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"AST",
					"Control Dep",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"Control Dep",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"Control Dep",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"AST",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"",
					"AST",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"Control Dep",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"",
					"AST",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"",
					"AST",
					"",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"",
					"",
					""
				],
				[
					"Action",
					"",
					"Control Dep",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"",
					"",
					"",
					"AST",
					"",
					"",
					"",
					"AST"
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					""
				]
			],
			"vertex_label":[
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1
			],
			"attribute_label":[
				{
					"466":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"101":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"50":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"175":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"148":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"64":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"60":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"59":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"103":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"114":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"470":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"469":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"468":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"467":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"473":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"472":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"471":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"474":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"475":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				}
			],
			"attributes":[
				{
					"466":{
						"locationInParent":"ACTION",
						"value2":"",
						"valueType":"no type",
						"nodeType":"class model.actions.Insert",
						"value":"INSERT"
					}
				},
				{
					"101":{
						"locationInParent":"DEFAULT_EXPRESSION",
						"value2":"new DocumentType(org.jsoup.parser.HtmlTreeBuilder..normalizeTag(Token.Doctype.getName()), Token.Doctype.getPublicIdentifier(), Token.Doctype.getSystemIdentifier(), org.jsoup.parser.HtmlTreeBuilder.getBaseUri())",
						"valueType":"DocumentType",
						"nodeType":"class spoon.support.reflect.code.CtConstructorCallImpl",
						"value":"new DocumentType(tb.settings.normalizeTag(d.getName()), d.getPublicIdentifier(), d.getSystemIdentifier(), tb.getBaseUri())"
					}
				},
				{
					"50":{
						"locationInParent":"CONDITION",
						"value2":"org.jsoup.parser.Token.isDoctype()",
						"valueType":"boolean",
						"nodeType":"class spoon.support.reflect.code.CtInvocationImpl",
						"value":"t.isDoctype()"
					}
				},
				{
					"175":{
						"locationInParent":"STATEMENT",
						"value2":"exceed MAX_TOKEN_LENGTH:42 tokens",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtIfImpl",
						"value":"exceed MAX_TOKEN_LENGTH:42 tokens"
					}
				},
				{
					"148":{
						"locationInParent":"THEN",
						"value2":"exceed MAX_TOKEN_LENGTH:32 tokens",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtBlockImpl",
						"value":"exceed MAX_TOKEN_LENGTH:32 tokens"
					}
				},
				{
					"64":{
						"locationInParent":"STATEMENT",
						"value2":"// todo: parse error check on expected doctypes\n// todo: quirk state check on doctype ids\nToken.Doctype d = org.jsoup.parser.Token.asDoctype()",
						"valueType":"Token$Doctype",
						"nodeType":"class spoon.support.reflect.code.CtLocalVariableImpl",
						"value":"// todo: parse error check on expected doctypes\n// todo: quirk state check on doctype ids\nToken.Doctype d = t.asDoctype()"
					}
				},
				{
					"60":{
						"locationInParent":"DEFAULT_EXPRESSION",
						"value2":"org.jsoup.parser.Token.asDoctype()",
						"valueType":"Token.Doctype",
						"nodeType":"class spoon.support.reflect.code.CtInvocationImpl",
						"value":"t.asDoctype()"
					}
				},
				{
					"59":{
						"locationInParent":"TARGET",
						"value2":"org.jsoup.parser.Token",
						"valueType":"org.jsoup.parser.Token",
						"nodeType":"class spoon.support.reflect.code.CtVariableReadImpl",
						"value":"t"
					}
				},
				{
					"103":{
						"locationInParent":"STATEMENT",
						"value2":"exceed MAX_TOKEN_LENGTH:15 tokens",
						"valueType":"DocumentType",
						"nodeType":"class spoon.support.reflect.code.CtLocalVariableImpl",
						"value":"DocumentType doctype = new DocumentType(tb.settings.normalizeTag(d.getName()), d.getPublicIdentifier(), d.getSystemIdentifier(), tb.getBaseUri())"
					}
				},
				{
					"114":{
						"locationInParent":"ARGUMENT",
						"value2":"org.jsoup.parser.DocumentType",
						"valueType":"org.jsoup.parser.DocumentType",
						"nodeType":"class spoon.support.reflect.code.CtVariableReadImpl",
						"value":"doctype"
					}
				},
				{
					"470":{
						"locationInParent":"TARGET",
						"value2":"Token.Doctype",
						"valueType":"Token.Doctype",
						"nodeType":"class spoon.support.reflect.code.CtVariableReadImpl",
						"value":"d"
					}
				},
				{
					"469":{
						"locationInParent":"VARIABLE",
						"value2":"Token.Doctype",
						"valueType":"Token.Doctype",
						"nodeType":"class spoon.support.reflect.reference.CtLocalVariableReferenceImpl",
						"value":"d"
					}
				},
				{
					"468":{
						"locationInParent":"TYPE",
						"value2":"Token.Doctype",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.reference.CtTypeReferenceImpl",
						"value":"Doctype"
					}
				},
				{
					"467":{
						"locationInParent":"PACKAGE_REF",
						"value2":"Token",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.reference.CtPackageReferenceImpl",
						"value":"Token"
					}
				},
				{
					"473":{
						"locationInParent":"EXECUTABLE_REF",
						"value2":"getPubSysKey",
						"valueType":"null type",
						"nodeType":"class spoon.support.reflect.reference.CtExecutableReferenceImpl",
						"value":"getPubSysKey"
					}
				},
				{
					"472":{
						"locationInParent":"DECLARING_TYPE",
						"value2":"Token.Doctype",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.reference.CtTypeReferenceImpl",
						"value":"Doctype"
					}
				},
				{
					"471":{
						"locationInParent":"PACKAGE_REF",
						"value2":"Token",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.reference.CtPackageReferenceImpl",
						"value":"Token"
					}
				},
				{
					"474":{
						"locationInParent":"ARGUMENT",
						"value2":"Token.Doctype.getPubSysKey()",
						"valueType":"null type",
						"nodeType":"class spoon.support.reflect.code.CtInvocationImpl",
						"value":"d.getPubSysKey()"
					}
				},
				{
					"475":{
						"locationInParent":"METHOD_NAME",
						"value2":"getPubSysKey",
						"valueType":"no type",
						"nodeType":"class codegraph.CtVirtualElement",
						"value":"getPubSysKey"
					}
				}
			],
			"edge_label":[
				[
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0
				],
				[
					1,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					1,
					0,
					1,
					1,
					1,
					1,
					1,
					1,
					1,
					1,
					0,
					0,
					0,
					1,
					0,
					0,
					1,
					0
				],
				[
					0,
					0,
					1,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					1,
					1,
					0,
					1,
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					1,
					0,
					1,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					1,
					0,
					0,
					1,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					1,
					0,
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					1,
					1,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					1,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					1,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					1,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					1,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					0,
					0
				],
				[
					1,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					0,
					0,
					1,
					0,
					0,
					0,
					1
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0
				]
			]
		}
	]
}