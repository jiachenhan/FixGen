{
	"/Users/yumeng/JavaProjects/FixGen/data/d4j-info-2.0/buggy_fix/buggy/cli/cli_14_buggy/src/java/org/apache/commons/cli2/option/GroupImpl.java":[
		{
			"vertexes":[
				570,
				126,
				97,
				127
			],
			"edges":[
				[
					"",
					"Action",
					"",
					""
				],
				[
					"Action",
					"",
					"Control Dep",
					"AST"
				],
				[
					"",
					"Control Dep",
					"",
					"Control Dep"
				],
				[
					"",
					"AST",
					"Control Dep",
					""
				]
			],
			"vertex_label":[
				1,
				1,
				1,
				1
			],
			"attribute_label":[
				{
					"570":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"126":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"97":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"127":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				}
			],
			"attributes":[
				{
					"570":{
						"locationInParent":"ACTION",
						"value2":"",
						"valueType":"no type",
						"nodeType":"class model.actions.Delete",
						"value":"DELETE"
					}
				},
				{
					"126":{
						"locationInParent":"STATEMENT",
						"value2":"org.apache.commons.cli2.Option.validate(org.apache.commons.cli2.WriteableCommandLine)",
						"valueType":"null type",
						"nodeType":"class spoon.support.reflect.code.CtInvocationImpl",
						"value":"option.validate(commandLine)"
					}
				},
				{
					"97":{
						"locationInParent":"CONDITION",
						"value2":"org.apache.commons.cli2.WriteableCommandLine.hasOption(org.apache.commons.cli2.Option)",
						"valueType":"boolean",
						"nodeType":"class spoon.support.reflect.code.CtInvocationImpl",
						"value":"commandLine.hasOption(option)"
					}
				},
				{
					"127":{
						"locationInParent":"THEN",
						"value2":"{\n    if ((++int) > int) {\n        org.apache.commons.cli2.Option = org.apache.commons.cli2.Option;\n        break;\n    }\n    org.apache.commons.cli2.Option.validate(org.apache.commons.cli2.WriteableCommandLine);\n}",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtBlockImpl",
						"value":"{\n    if ((++present) > maximum) {\n        unexpected = option;\n        break;\n    }\n    option.validate(commandLine);\n}"
					}
				}
			],
			"edge_label":[
				[
					0,
					1,
					0,
					0
				],
				[
					1,
					0,
					1,
					1
				],
				[
					0,
					1,
					0,
					1
				],
				[
					0,
					1,
					1,
					0
				]
			]
		},
		{
			"vertexes":[
				571,
				127,
				97,
				129,
				575,
				574,
				573,
				577,
				576,
				578,
				572
			],
			"edges":[
				[
					"",
					"Action",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"Action",
					""
				],
				[
					"Action",
					"",
					"Control Dep",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"Control Dep",
					"",
					"AST",
					"Control Dep",
					"",
					"",
					"Control Dep",
					"",
					"Control Dep",
					""
				],
				[
					"",
					"AST",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"Control Dep",
					"",
					"",
					"AST",
					"",
					"",
					"",
					"AST",
					""
				],
				[
					"",
					"",
					"",
					"",
					"AST",
					"",
					"AST",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"Control Dep",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"AST",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					"",
					"",
					""
				],
				[
					"Action",
					"",
					"Control Dep",
					"",
					"AST",
					"",
					"",
					"AST",
					"",
					"",
					"AST"
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					""
				]
			],
			"vertex_label":[
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1
			],
			"attribute_label":[
				{
					"571":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"127":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"97":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"129":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"575":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"574":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"573":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"577":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"576":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"578":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"572":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				}
			],
			"attributes":[
				{
					"571":{
						"locationInParent":"ACTION",
						"value2":"",
						"valueType":"no type",
						"nodeType":"class model.actions.Insert",
						"value":"INSERT"
					}
				},
				{
					"127":{
						"locationInParent":"THEN",
						"value2":"{\n    if ((++int) > int) {\n        org.apache.commons.cli2.Option = org.apache.commons.cli2.Option;\n        break;\n    }\n    org.apache.commons.cli2.Option.validate(org.apache.commons.cli2.WriteableCommandLine);\n}",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtBlockImpl",
						"value":"{\n    if ((++present) > maximum) {\n        unexpected = option;\n        break;\n    }\n    option.validate(commandLine);\n}"
					}
				},
				{
					"97":{
						"locationInParent":"CONDITION",
						"value2":"org.apache.commons.cli2.WriteableCommandLine.hasOption(org.apache.commons.cli2.Option)",
						"valueType":"boolean",
						"nodeType":"class spoon.support.reflect.code.CtInvocationImpl",
						"value":"commandLine.hasOption(option)"
					}
				},
				{
					"129":{
						"locationInParent":"STATEMENT",
						"value2":"// if the child option is present then validate it\nif (org.apache.commons.cli2.WriteableCommandLine.hasOption(org.apache.commons.cli2.Option)) {\n    if ((++int) > int) {\n        org.apache.commons.cli2.Option = org.apache.commons.cli2.Option;\n        break;\n    }\n    org.apache.commons.cli2.Option.validate(org.apache.commons.cli2.WriteableCommandLine);\n}",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtIfImpl",
						"value":"// if the child option is present then validate it\nif (commandLine.hasOption(option)) {\n    if ((++present) > maximum) {\n        unexpected = option;\n        break;\n    }\n    option.validate(commandLine);\n}"
					}
				},
				{
					"575":{
						"locationInParent":"ASSIGNED",
						"value2":"boolean",
						"valueType":"boolean",
						"nodeType":"class spoon.support.reflect.code.CtVariableWriteImpl",
						"value":"validate"
					}
				},
				{
					"574":{
						"locationInParent":"VARIABLE",
						"value2":"boolean",
						"valueType":"boolean",
						"nodeType":"class spoon.support.reflect.reference.CtLocalVariableReferenceImpl",
						"value":"validate"
					}
				},
				{
					"573":{
						"locationInParent":"TYPE",
						"value2":"boolean",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.reference.CtTypeReferenceImpl",
						"value":"boolean"
					}
				},
				{
					"577":{
						"locationInParent":"ASSIGNMENT",
						"value2":"java.lang.Boolean",
						"valueType":"boolean",
						"nodeType":"class spoon.support.reflect.code.CtLiteralImpl",
						"value":"true"
					}
				},
				{
					"576":{
						"locationInParent":"TYPE",
						"value2":"boolean",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.reference.CtTypeReferenceImpl",
						"value":"boolean"
					}
				},
				{
					"578":{
						"locationInParent":"STATEMENT",
						"value2":"boolean = java.lang.Boolean",
						"valueType":"boolean",
						"nodeType":"class spoon.support.reflect.code.CtAssignmentImpl",
						"value":"validate = true"
					}
				},
				{
					"572":{
						"locationInParent":"TYPE",
						"value2":"boolean",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.reference.CtTypeReferenceImpl",
						"value":"boolean"
					}
				}
			],
			"edge_label":[
				[
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0
				],
				[
					1,
					0,
					1,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					1,
					0,
					1,
					1,
					0,
					0,
					1,
					0,
					1,
					0
				],
				[
					0,
					1,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					1,
					0,
					0,
					1,
					0,
					0,
					0,
					1,
					0
				],
				[
					0,
					0,
					0,
					0,
					1,
					0,
					1,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					1,
					1,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0,
					0,
					0
				],
				[
					1,
					0,
					1,
					0,
					1,
					0,
					0,
					1,
					0,
					0,
					1
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					1,
					0
				]
			]
		},
		{
			"vertexes":[
				579,
				87,
				43,
				40,
				42,
				39,
				130
			],
			"edges":[
				[
					"",
					"Action",
					"",
					"",
					"",
					"",
					""
				],
				[
					"Action",
					"",
					"Control Dep",
					"",
					"",
					"",
					"AST"
				],
				[
					"",
					"Control Dep",
					"",
					"AST",
					"AST",
					"AST",
					"Control Dep"
				],
				[
					"",
					"",
					"AST",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"AST",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"AST",
					"",
					"",
					"",
					""
				],
				[
					"",
					"AST",
					"Control Dep",
					"",
					"",
					"",
					""
				]
			],
			"vertex_label":[
				1,
				1,
				1,
				1,
				1,
				1,
				1
			],
			"attribute_label":[
				{
					"579":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"87":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"43":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"40":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"42":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"39":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"130":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				}
			],
			"attributes":[
				{
					"579":{
						"locationInParent":"ACTION",
						"value2":"",
						"valueType":"no type",
						"nodeType":"class model.actions.Move",
						"value":"MOVE"
					}
				},
				{
					"87":{
						"locationInParent":"STATEMENT",
						"value2":"if (boolean) {\n    org.apache.commons.cli2.Option.validate(org.apache.commons.cli2.WriteableCommandLine);\n}",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtIfImpl",
						"value":"if (validate) {\n    option.validate(commandLine);\n}"
					}
				},
				{
					"43":{
						"locationInParent":"EXPRESSION",
						"value2":"java.util.Iterator.hasNext()",
						"valueType":"boolean",
						"nodeType":"class spoon.support.reflect.code.CtInvocationImpl",
						"value":"i.hasNext()"
					}
				},
				{
					"40":{
						"locationInParent":"METHOD_NAME",
						"value2":"hasNext",
						"valueType":"no type",
						"nodeType":"class codegraph.CtVirtualElement",
						"value":"hasNext"
					}
				},
				{
					"42":{
						"locationInParent":"TARGET",
						"value2":"java.util.Iterator",
						"valueType":"java.util.Iterator",
						"nodeType":"class spoon.support.reflect.code.CtVariableReadImpl",
						"value":"i"
					}
				},
				{
					"39":{
						"locationInParent":"EXECUTABLE_REF",
						"value2":"hasNext",
						"valueType":"boolean",
						"nodeType":"class spoon.support.reflect.reference.CtExecutableReferenceImpl",
						"value":"hasNext"
					}
				},
				{
					"130":{
						"locationInParent":"BODY",
						"value2":"exceed MAX_TOKEN_LENGTH:28 tokens",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtBlockImpl",
						"value":"exceed MAX_TOKEN_LENGTH:28 tokens"
					}
				}
			],
			"edge_label":[
				[
					0,
					1,
					0,
					0,
					0,
					0,
					0
				],
				[
					1,
					0,
					1,
					0,
					0,
					0,
					1
				],
				[
					0,
					1,
					0,
					1,
					1,
					1,
					1
				],
				[
					0,
					0,
					1,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					1,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					1,
					0,
					0,
					0,
					0
				],
				[
					0,
					1,
					1,
					0,
					0,
					0,
					0
				]
			]
		}
	]
}