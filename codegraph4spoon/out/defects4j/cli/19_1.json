{
	"/Users/yumeng/JavaProjects/FixGen/data/d4j-info-2.0/buggy_fix/buggy/cli/cli_19_buggy/src/java/org/apache/commons/cli/PosixParser.java":[
		{
			"vertexes":[
				199,
				78,
				56,
				79
			],
			"edges":[
				[
					"",
					"Action",
					"",
					""
				],
				[
					"Action",
					"",
					"Control Dep",
					"AST"
				],
				[
					"",
					"Control Dep",
					"",
					"Control Dep"
				],
				[
					"",
					"AST",
					"Control Dep",
					""
				]
			],
			"vertex_label":[
				1,
				1,
				1,
				1
			],
			"attribute_label":[
				{
					"199":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"78":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"56":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"79":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				}
			],
			"attributes":[
				{
					"199":{
						"locationInParent":"ACTION",
						"value2":"",
						"valueType":"no type",
						"nodeType":"class model.actions.Delete",
						"value":"DELETE"
					}
				},
				{
					"78":{
						"locationInParent":"STATEMENT",
						"value2":"java.util.List.add(java.lang.String)",
						"valueType":"boolean",
						"nodeType":"class spoon.support.reflect.code.CtInvocationImpl",
						"value":"tokens.add(token)"
					}
				},
				{
					"56":{
						"locationInParent":"CONDITION",
						"value2":"boolean",
						"valueType":"boolean",
						"nodeType":"class spoon.support.reflect.code.CtVariableReadImpl",
						"value":"stopAtNonOption"
					}
				},
				{
					"79":{
						"locationInParent":"THEN",
						"value2":"{\n    boolean = java.lang.Boolean;\n    java.util.List.add(java.lang.String);\n}",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtBlockImpl",
						"value":"{\n    eatTheRest = true;\n    tokens.add(token);\n}"
					}
				}
			],
			"edge_label":[
				[
					0,
					1,
					0,
					0
				],
				[
					1,
					0,
					1,
					1
				],
				[
					0,
					1,
					0,
					1
				],
				[
					0,
					1,
					1,
					0
				]
			]
		},
		{
			"vertexes":[
				200,
				53,
				22,
				14,
				19,
				13,
				21,
				54,
				83,
				85
			],
			"edges":[
				[
					"",
					"Action",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"Action",
					"",
					"Control Dep",
					"",
					"",
					"",
					"",
					"AST",
					"",
					""
				],
				[
					"",
					"Control Dep",
					"",
					"AST",
					"AST",
					"AST",
					"AST",
					"Control Dep",
					"",
					""
				],
				[
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"AST",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"AST",
					"Control Dep",
					"",
					"",
					"",
					"",
					"",
					"",
					""
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST"
				],
				[
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"",
					"AST",
					""
				]
			],
			"vertex_label":[
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				1,
				0,
				0
			],
			"attribute_label":[
				{
					"200":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"53":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"22":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"14":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"19":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"13":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"21":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"54":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"83":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				},
				{
					"85":{
						"locationInParent":1,
						"value2":1,
						"valueType":1,
						"nodeType":1,
						"value":1
					}
				}
			],
			"attributes":[
				{
					"200":{
						"locationInParent":"ACTION",
						"value2":"",
						"valueType":"no type",
						"nodeType":"class model.actions.Move",
						"value":"MOVE"
					}
				},
				{
					"53":{
						"locationInParent":"STATEMENT",
						"value2":"java.util.List.add(java.lang.String)",
						"valueType":"boolean",
						"nodeType":"class spoon.support.reflect.code.CtInvocationImpl",
						"value":"tokens.add(token)"
					}
				},
				{
					"22":{
						"locationInParent":"CONDITION",
						"value2":"org.apache.commons.cli.Options.hasOption(java.lang.String)",
						"valueType":"boolean",
						"nodeType":"class spoon.support.reflect.code.CtInvocationImpl",
						"value":"options.hasOption(token)"
					}
				},
				{
					"14":{
						"locationInParent":"METHOD_NAME",
						"value2":"hasOption",
						"valueType":"no type",
						"nodeType":"class codegraph.CtVirtualElement",
						"value":"hasOption"
					}
				},
				{
					"19":{
						"locationInParent":"TARGET",
						"value2":"org.apache.commons.cli.Options",
						"valueType":"org.apache.commons.cli.Options",
						"nodeType":"class spoon.support.reflect.code.CtFieldReadImpl",
						"value":"options"
					}
				},
				{
					"13":{
						"locationInParent":"EXECUTABLE_REF",
						"value2":"hasOption",
						"valueType":"boolean",
						"nodeType":"class spoon.support.reflect.reference.CtExecutableReferenceImpl",
						"value":"hasOption"
					}
				},
				{
					"21":{
						"locationInParent":"ARGUMENT",
						"value2":"java.lang.String",
						"valueType":"java.lang.String",
						"nodeType":"class spoon.support.reflect.code.CtVariableReadImpl",
						"value":"token"
					}
				},
				{
					"54":{
						"locationInParent":"THEN",
						"value2":"{\n    org.apache.commons.cli.Option = org.apache.commons.cli.Options.getOption(java.lang.String);\n    java.util.List.add(java.lang.String);\n}",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtBlockImpl",
						"value":"{\n    currentOption = options.getOption(token);\n    tokens.add(token);\n}"
					}
				},
				{
					"83":{
						"locationInParent":"BODY",
						"value2":"exceed MAX_TOKEN_LENGTH:18 tokens",
						"valueType":"no type",
						"nodeType":"class spoon.support.reflect.code.CtBlockImpl",
						"value":"exceed MAX_TOKEN_LENGTH:18 tokens"
					}
				},
				{
					"85":{
						"locationInParent":"TYPE_MEMBER",
						"value2":"exceed MAX_TOKEN_LENGTH:25 tokens",
						"valueType":"void",
						"nodeType":"class spoon.support.reflect.declaration.CtMethodImpl",
						"value":"exceed MAX_TOKEN_LENGTH:25 tokens"
					}
				}
			],
			"edge_label":[
				[
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					1,
					0,
					1,
					0,
					0,
					0,
					0,
					1,
					0,
					0
				],
				[
					0,
					1,
					0,
					1,
					1,
					1,
					1,
					1,
					0,
					0
				],
				[
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					1,
					1,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				],
				[
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0
				]
			]
		}
	]
}