diff --git a/framework/ipc/src/main/java/org/apache/cloudstack/framework/serializer/OnwireClassRegistry.java b/framework/ipc/src/main/java/org/apache/cloudstack/framework/serializer/OnwireClassRegistry.java
index de7558734c3f..24ccfe42afc5 100644
--- a/framework/ipc/src/main/java/org/apache/cloudstack/framework/serializer/OnwireClassRegistry.java
+++ b/framework/ipc/src/main/java/org/apache/cloudstack/framework/serializer/OnwireClassRegistry.java
@@ -109,7 +109,7 @@ static Set<Class<?>> getClasses(ClassLoader loader, String packageName) {
                     if (filePath != null) {
                         // WINDOWS HACK
                         if (filePath.indexOf("%20") > 0)
-                            filePath = filePath.replaceAll("%20", " ");
+                            filePath = filePath.replace("%20", " ");
                         if ((filePath.indexOf("!") > 0) && (filePath.indexOf(".jar") > 0)) {
                             String jarPath = filePath.substring(0, filePath.indexOf("!")).substring(filePath.indexOf(":") + 1);
                             // WINDOWS HACK
@@ -183,4 +183,4 @@ static Set<Class<?>> getFromJARFile(String jar, String packageName) throws IOExc
     static String stripFilenameExtension(String file) {
         return file.substring(0, file.lastIndexOf('.'));
     }
-}
\ No newline at end of file
+}
diff --git a/plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/resource/LibvirtComputingResource.java b/plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/resource/LibvirtComputingResource.java
index 76db243ee6b7..47d5aade36bb 100644
--- a/plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/resource/LibvirtComputingResource.java
+++ b/plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/resource/LibvirtComputingResource.java
@@ -2979,7 +2979,7 @@ public String rebootVM(final Connect conn, final String vmName) {
                         final int vnetId = Integer.parseInt(nic.getBrName().replaceFirst("cloudVirBr", ""));
                         final String pifName = getPif(_guestBridgeName);
                         final String newBrName = "br" + pifName + "-" + vnetId;
-                        vmDef = vmDef.replaceAll("'" + nic.getBrName() + "'", "'" + newBrName + "'");
+                        vmDef = vmDef.replace("'" + nic.getBrName() + "'", "'" + newBrName + "'");
                         s_logger.debug("VM bridge name is changed from " + nic.getBrName() + " to " + newBrName);
                     } catch (final NumberFormatException e) {
                         continue;
diff --git a/plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/manager/VmwareStorageManagerImpl.java b/plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/manager/VmwareStorageManagerImpl.java
index 97b5088ccae8..f17d613125c8 100644
--- a/plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/manager/VmwareStorageManagerImpl.java
+++ b/plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/manager/VmwareStorageManagerImpl.java
@@ -525,7 +525,7 @@ public Answer execute(VmwareHostService hostService, CreateVolumeFromSnapshotCom
 
         String details = null;
         boolean success = false;
-        String newVolumeName = UUID.randomUUID().toString().replaceAll("-", "");
+        String newVolumeName = UUID.randomUUID().toString().replace("-", "");
 
         VmwareContext context = hostService.getServiceContext(cmd);
         try {
@@ -1053,7 +1053,7 @@ private Pair<String, String> copyVolumeFromSecStorage(VmwareHypervisorHost hyper
             Integer nfsVersion) throws Exception {
 
         String volumeFolder = String.valueOf(volumeId) + "/";
-        String newVolume = UUID.randomUUID().toString().replaceAll("-", "");
+        String newVolume = UUID.randomUUID().toString().replace("-", "");
         restoreVolumeFromSecStorage(hyperHost, dsMo, newVolume, secStorageUrl, "volumes/" + volumeFolder, exportName, nfsVersion);
 
         return new Pair<String, String>(volumeFolder, newVolume);
diff --git a/server/src/main/java/com/cloud/user/AccountManagerImpl.java b/server/src/main/java/com/cloud/user/AccountManagerImpl.java
index 20d769f09efa..6ef30ebc69ff 100644
--- a/server/src/main/java/com/cloud/user/AccountManagerImpl.java
+++ b/server/src/main/java/com/cloud/user/AccountManagerImpl.java
@@ -2328,9 +2328,9 @@ public UserAccount authenticateUser(final String username, final String password
 
                 // Block when is not in the list of allowed IPs
                 if (!NetUtils.isIpInCidrList(loginIpAddress, accessAllowedCidrs.split(","))) {
-                    s_logger.warn("Request by account '" + account.toString() + "' was denied since " + loginIpAddress.toString().replaceAll("/", "") + " does not match " + accessAllowedCidrs);
+                    s_logger.warn("Request by account '" + account.toString() + "' was denied since " + loginIpAddress.toString().replace("/", "") + " does not match " + accessAllowedCidrs);
                     throw new CloudAuthenticationException("Failed to authenticate user '" + username + "' in domain '" + domain.getPath() + "' from ip "
-                            + loginIpAddress.toString().replaceAll("/", "") + "; please provide valid credentials");
+                            + loginIpAddress.toString().replace("/", "") + "; please provide valid credentials");
                 }
             }
 
@@ -2912,4 +2912,4 @@ public String getConfigComponentName() {
     public ConfigKey<?>[] getConfigKeys() {
         return new ConfigKey<?>[] {UseSecretKeyInResponse};
     }
-}
\ No newline at end of file
+}
