diff --git a/fineract-provider/src/main/java/org/apache/fineract/accounting/rule/api/AccountingRuleJsonInputParams.java b/fineract-provider/src/main/java/org/apache/fineract/accounting/rule/api/AccountingRuleJsonInputParams.java
index 91d286e24b..92099490bd 100755
--- a/fineract-provider/src/main/java/org/apache/fineract/accounting/rule/api/AccountingRuleJsonInputParams.java
+++ b/fineract-provider/src/main/java/org/apache/fineract/accounting/rule/api/AccountingRuleJsonInputParams.java
@@ -48,10 +48,10 @@ public static Set<String> getAllValues() {
 
     @Override
     public String toString() {
-        return name().toString().replaceAll("_", " ");
+        return name().toString().replace("_", " ");
     }
 
     public String getValue() {
         return this.value;
     }
-}
\ No newline at end of file
+}
diff --git a/fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/populator/fixeddeposits/FixedDepositTransactionWorkbookPopulator.java b/fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/populator/fixeddeposits/FixedDepositTransactionWorkbookPopulator.java
index 0b2d32419d..79545241d9 100644
--- a/fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/populator/fixeddeposits/FixedDepositTransactionWorkbookPopulator.java
+++ b/fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/populator/fixeddeposits/FixedDepositTransactionWorkbookPopulator.java
@@ -158,7 +158,7 @@ private void setNames(Sheet worksheet) {
         //Account Number Named  after Clients
         for(int j = 0; j < clientsWithActiveSavings.size(); j++) {
             Name name = savingsTransactionWorkbook.createName();
-            name.setNameName("Account_" + clientsWithActiveSavings.get(j).replaceAll(" ", "_") + "_" + clientIdsWithActiveSavings.get(j) + "_");
+            name.setNameName("Account_" + clientsWithActiveSavings.get(j).replace(" ", "_") + "_" + clientIdsWithActiveSavings.get(j) + "_");
             name.setRefersToFormula(TemplatePopulateImportConstants.FIXED_DEPOSIT_TRANSACTION_SHEET_NAME+"!$Q$" + clientNameToBeginEndIndexes.get(clientsWithActiveSavings.get(j))[0] + ":$Q$" + clientNameToBeginEndIndexes.get(clientsWithActiveSavings.get(j))[1]);
         }
 
diff --git a/fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/populator/loanrepayment/LoanRepaymentWorkbookPopulator.java b/fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/populator/loanrepayment/LoanRepaymentWorkbookPopulator.java
index 55f24b831a..cf17656d37 100644
--- a/fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/populator/loanrepayment/LoanRepaymentWorkbookPopulator.java
+++ b/fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/populator/loanrepayment/LoanRepaymentWorkbookPopulator.java
@@ -199,7 +199,7 @@ private void setNames(Sheet worksheet) {
 		// Account Number Named after Clients
 		for (int j = 0; j < clientsWithActiveLoans.size(); j++) {
 			Name name = loanRepaymentWorkbook.createName();
-			name.setNameName("Account_" + clientsWithActiveLoans.get(j).replaceAll(" ", "_") + "_"
+			name.setNameName("Account_" + clientsWithActiveLoans.get(j).replace(" ", "_") + "_"
 					+ clientIdsWithActiveLoans.get(j) + "_");
 			name.setRefersToFormula(
 					TemplatePopulateImportConstants.LOAN_REPAYMENT_SHEET_NAME+"!$T$" + clientNameToBeginEndIndexes.get(clientsWithActiveLoans.get(j))[0] + ":$T$"
@@ -296,4 +296,4 @@ private void setLayout(Sheet worksheet) {
 
 	}
 
-}
\ No newline at end of file
+}
diff --git a/fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/populator/savings/SavingsTransactionsWorkbookPopulator.java b/fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/populator/savings/SavingsTransactionsWorkbookPopulator.java
index 29f195369c..58310e4a58 100644
--- a/fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/populator/savings/SavingsTransactionsWorkbookPopulator.java
+++ b/fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/populator/savings/SavingsTransactionsWorkbookPopulator.java
@@ -163,7 +163,7 @@ private void setNames(Sheet worksheet) {
         //Account Number Named  after Clients
         for(int j = 0; j < clientsWithActiveSavings.size(); j++) {
             Name name = savingsTransactionWorkbook.createName();
-            name.setNameName("Account_" + clientsWithActiveSavings.get(j).replaceAll(" ", "_") + "_" + clientIdsWithActiveSavings.get(j) + "_");
+            name.setNameName("Account_" + clientsWithActiveSavings.get(j).replace(" ", "_") + "_" + clientIdsWithActiveSavings.get(j) + "_");
             name.setRefersToFormula(TemplatePopulateImportConstants.SAVINGS_TRANSACTION_SHEET_NAME+"!$Q$" + clientNameToBeginEndIndexes.get(clientsWithActiveSavings.get(j))[0] + ":$Q$" + clientNameToBeginEndIndexes.get(clientsWithActiveSavings.get(j))[1]);
         }
 
diff --git a/fineract-provider/src/main/java/org/apache/fineract/portfolio/common/domain/ConditionType.java b/fineract-provider/src/main/java/org/apache/fineract/portfolio/common/domain/ConditionType.java
index 1784e8299b..85bea15a95 100755
--- a/fineract-provider/src/main/java/org/apache/fineract/portfolio/common/domain/ConditionType.java
+++ b/fineract-provider/src/main/java/org/apache/fineract/portfolio/common/domain/ConditionType.java
@@ -53,7 +53,7 @@ private ConditionType(final Integer value, final String code) {
 
     @Override
     public String toString() {
-        return name().toString().replaceAll("_", " ");
+        return name().toString().replace("_", " ");
     }
 
     public Integer getValue() {
@@ -94,4 +94,4 @@ public static Object[] integerValues() {
 
         return values.toArray();
     }
-}
\ No newline at end of file
+}
diff --git a/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/service/CenterReadPlatformServiceImpl.java b/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/service/CenterReadPlatformServiceImpl.java
index 656af43bf4..5b42c4e667 100644
--- a/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/service/CenterReadPlatformServiceImpl.java
+++ b/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/service/CenterReadPlatformServiceImpl.java
@@ -131,8 +131,8 @@ private String getCenterExtraCriteria(String schemaSl, List<Object> paramList,fi
             String sqlQueryCriteria = searchCriteria.getSqlSearch();
             if (StringUtils.isNotBlank(sqlQueryCriteria)) {
                 SQLInjectionValidator.validateSQLInput(sqlQueryCriteria);
-                sqlQueryCriteria = sqlQueryCriteria.replaceAll(" display_name ", " g.display_name ");
-                sqlQueryCriteria = sqlQueryCriteria.replaceAll("display_name ", "g.display_name ");
+                sqlQueryCriteria = sqlQueryCriteria.replace(" display_name ", " g.display_name ");
+                sqlQueryCriteria = sqlQueryCriteria.replace("display_name ", "g.display_name ");
                 extraCriteria.append(" and (").append(sqlQueryCriteria).append(") ");
                 this.columnValidator.validateSqlInjection(schemaSl, sqlQueryCriteria);
             }
@@ -630,4 +630,4 @@ public void validateForGenerateCollectionSheet(final Long staffId) {
                 "Validation errors exist.", dataValidationErrors); }
 
     }
-}
\ No newline at end of file
+}
diff --git a/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/service/GroupReadPlatformServiceImpl.java b/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/service/GroupReadPlatformServiceImpl.java
index 72f044cca2..889ba8f495 100644
--- a/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/service/GroupReadPlatformServiceImpl.java
+++ b/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/service/GroupReadPlatformServiceImpl.java
@@ -221,8 +221,8 @@ private String getGroupExtraCriteria(String schemaSql, List<Object> paramList, f
             String sqlSearch = searchCriteria.getSqlSearch();
             if (sqlSearch != null) {
                 SQLInjectionValidator.validateSQLInput(sqlSearch);
-                sqlSearch = sqlSearch.replaceAll(" display_name ", " g.display_name ");
-                sqlSearch = sqlSearch.replaceAll("display_name ", "g.display_name ");
+                sqlSearch = sqlSearch.replace(" display_name ", " g.display_name ");
+                sqlSearch = sqlSearch.replace("display_name ", "g.display_name ");
                 extraCriteria.append(" and ( ").append(sqlSearch).append(") ");
                 this.columnValidator.validateSqlInjection(schemaSql, sqlSearch);
             }
@@ -317,4 +317,4 @@ public GroupGeneralData retrieveGroupWithClosureReasons() {
         return GroupGeneralData.withClosureReasons(closureReasons);
     }
 
-}
\ No newline at end of file
+}
diff --git a/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanReadPlatformServiceImpl.java b/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanReadPlatformServiceImpl.java
index 20230d6a48..043a6e371c 100755
--- a/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanReadPlatformServiceImpl.java
+++ b/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanReadPlatformServiceImpl.java
@@ -306,7 +306,7 @@ public Page<LoanAccountData> retrieveAll(final SearchParameters searchParameters
             String sqlQueryCriteria = searchParameters.getSqlSearch();
             if (StringUtils.isNotBlank(sqlQueryCriteria)) {
                 SQLInjectionValidator.validateSQLInput(sqlQueryCriteria);
-                sqlQueryCriteria = sqlQueryCriteria.replaceAll("accountNo", "l.account_no");
+                sqlQueryCriteria = sqlQueryCriteria.replace("accountNo", "l.account_no");
                 this.columnValidator.validateSqlInjection(sqlBuilder.toString(), sqlQueryCriteria);
                 sqlBuilder.append(" and (").append(sqlQueryCriteria).append(")");
             }
